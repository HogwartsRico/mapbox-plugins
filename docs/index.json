[
  {
    "__docId__": 1,
    "kind": "external",
    "name": "Infinity",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Infinity",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 2,
    "kind": "external",
    "name": "NaN",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~NaN",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 3,
    "kind": "external",
    "name": "undefined",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~undefined",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 4,
    "kind": "external",
    "name": "null",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~null",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 5,
    "kind": "external",
    "name": "Object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 6,
    "kind": "external",
    "name": "object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 7,
    "kind": "external",
    "name": "Function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 8,
    "kind": "external",
    "name": "function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 9,
    "kind": "external",
    "name": "Boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 10,
    "kind": "external",
    "name": "boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 11,
    "kind": "external",
    "name": "Symbol",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Symbol",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 12,
    "kind": "external",
    "name": "Error",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Error",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 13,
    "kind": "external",
    "name": "EvalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/EvalError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~EvalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 14,
    "kind": "external",
    "name": "InternalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/InternalError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~InternalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 15,
    "kind": "external",
    "name": "RangeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RangeError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~RangeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 16,
    "kind": "external",
    "name": "ReferenceError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~ReferenceError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 17,
    "kind": "external",
    "name": "SyntaxError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~SyntaxError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 18,
    "kind": "external",
    "name": "TypeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~TypeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 19,
    "kind": "external",
    "name": "URIError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/URIError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~URIError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 20,
    "kind": "external",
    "name": "Number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 21,
    "kind": "external",
    "name": "number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 22,
    "kind": "external",
    "name": "Date",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Date",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 23,
    "kind": "external",
    "name": "String",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~String",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 24,
    "kind": "external",
    "name": "string",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~string",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 25,
    "kind": "external",
    "name": "RegExp",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~RegExp",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 26,
    "kind": "external",
    "name": "Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 27,
    "kind": "external",
    "name": "Int8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 28,
    "kind": "external",
    "name": "Uint8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 29,
    "kind": "external",
    "name": "Uint8ClampedArray",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint8ClampedArray",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 30,
    "kind": "external",
    "name": "Int16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 31,
    "kind": "external",
    "name": "Uint16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 32,
    "kind": "external",
    "name": "Int32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 33,
    "kind": "external",
    "name": "Uint32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 34,
    "kind": "external",
    "name": "Float32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Float32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 35,
    "kind": "external",
    "name": "Float64Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Float64Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 36,
    "kind": "external",
    "name": "Map",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Map",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 37,
    "kind": "external",
    "name": "Set",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Set",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 38,
    "kind": "external",
    "name": "WeakMap",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~WeakMap",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 39,
    "kind": "external",
    "name": "WeakSet",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~WeakSet",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 40,
    "kind": "external",
    "name": "ArrayBuffer",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~ArrayBuffer",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 41,
    "kind": "external",
    "name": "DataView",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~DataView",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 42,
    "kind": "external",
    "name": "JSON",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~JSON",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 43,
    "kind": "external",
    "name": "Promise",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Promise",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 44,
    "kind": "external",
    "name": "Generator",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Generator",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 45,
    "kind": "external",
    "name": "GeneratorFunction",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~GeneratorFunction",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 46,
    "kind": "external",
    "name": "Reflect",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Reflect",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 47,
    "kind": "external",
    "name": "Proxy",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Proxy",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 48,
    "kind": "file",
    "name": "src/bullet.js",
    "content": "\r\n/**\r\n * Bullet class\r\n */\r\nexport default class Bullet {\r\n    // opts should contain the Drone's direction and geometry\r\n    constructor(opts) {\r\n        this.id;\r\n        this.direciton = opts.direction ? opts.direction: 0;\r\n        this.spoint = {\r\n            type: 'Point',\r\n            coordinates: [0, 0]\r\n        };\r\n        // DeepCopy the drone coords to bullet.\r\n        this.spoint.coordinates[0] = opts.lon;\r\n        this.spoint.coordinates[1] = opts.lat;\r\n    }\r\n}\r\n",
    "static": true,
    "longname": "D:/projects/mapbox-plugins/src/bullet.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 49,
    "kind": "class",
    "name": "Bullet",
    "memberof": "src/bullet.js",
    "static": true,
    "longname": "src/bullet.js~Bullet",
    "access": "public",
    "export": true,
    "importPath": "mapbox-plugins/src/bullet.js",
    "importStyle": "Bullet",
    "description": "Bullet class",
    "lineNumber": 5,
    "interface": false
  },
  {
    "__docId__": 50,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/bullet.js~Bullet",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/bullet.js~Bullet#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 7,
    "undocument": true
  },
  {
    "__docId__": 51,
    "kind": "member",
    "name": "direciton",
    "memberof": "src/bullet.js~Bullet",
    "static": false,
    "longname": "src/bullet.js~Bullet#direciton",
    "access": "public",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 52,
    "kind": "member",
    "name": "spoint",
    "memberof": "src/bullet.js~Bullet",
    "static": false,
    "longname": "src/bullet.js~Bullet#spoint",
    "access": "public",
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "{\"type\": string, \"coordinates\": *}"
      ]
    }
  },
  {
    "__docId__": 53,
    "kind": "file",
    "name": "src/chart/canvas.js",
    "content": "\r\nfunction BBOX(opts) {\r\n    let _opts = opts || {};\r\n    this.minX = _opts.minX;\r\n    this.minY = _opts.minY; \r\n    this.maxX = _opts.maxX; \r\n    this.maxY = _opts.maxY;\r\n}\r\n\r\n// Some Static Function bind with one Canvas context\r\nexport default class Canvas {\r\n    // Bound with a canvas element.\r\n    static init(ele) {\r\n        if (ele instanceof HTMLCanvasElement) {\r\n            Canvas.canv = ele;\r\n            Canvas.height = ele.height;\r\n            Canvas.width = ele.width;\r\n            // let the canvas's width/height cohere width DOM width/height. \r\n            Canvas.ctx = ele.getContext(\"2d\");\r\n            Canvas.ctx.strokeStyle = \"rgba(0,0,0,0.9)\";\r\n            Canvas.ctx.fillStyle = \"rgba(10,200,240,0.4)\";\r\n            Canvas.ctx.strokeWidth = 1;\r\n            Canvas.animate = false;\r\n            Canvas.img = new Image();\r\n        } else {\r\n            console.error(\"ele is not instanceof CANVAS\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * set ctx.strokeStyle with rgba() @string\r\n     */\r\n    static setStroke(colorStr) {\r\n        if (Canvas.ctx) Canvas.ctx.strokeStyle = colorStr;\r\n    }\r\n\r\n    /**\r\n     * set ctx.fillStyle with rgba(). @string\r\n     */\r\n    static setFill(colorStr) {\r\n        if (Canvas.ctx) Canvas.ctx.fillStyle = colorStr;\r\n    }\r\n\r\n    /**\r\n     * set ctx.strokeWidth and lineWidth. @number\r\n     */\r\n    static setWidth(pixel) {\r\n        if (Canvas.ctx) \r\n        {\r\n            Canvas.ctx.lineWidth = pixel;\r\n            Canvas.ctx.strokeWidth = pixel;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * draw Circle with given x, y.\r\n     * radius: radius of Circle @number\r\n     * fill @bool\r\n     */\r\n    static drawPoint(coords, radius, fill, image, rotate, text){\r\n        let imgWidth, imgHeight;\r\n        Canvas.setFill(\"#EEE\");\r\n        Canvas.setStroke(\"#EE1\");\r\n        if (coords instanceof Array && coords.length == 2){\r\n            Canvas.ctx.beginPath();\r\n            if (image) {\r\n                Canvas.img.src = image;\r\n                if (radius) {\r\n                    imgWidth = radius;\r\n                    imgHeight = radius;\r\n                } else {\r\n                    imgWidth = Canvas.img.width;\r\n                    imgHeight = Canvas.img.height;\r\n                }\r\n                // drawImage(img, x2left, y2up, imgWidth, imgHeight)\r\n                // console.log(\"rendering drone..with width:\" + imgWidth + \" height:\" + imgHeight);\r\n                let y = Canvas.height - coords[1];\r\n                if(rotate) Canvas.rotateCtx(coords, rotate);\r\n                Canvas.ctx.drawImage(Canvas.img, parseInt(coords[0]), parseInt(y),imgWidth,imgHeight);\r\n                if(rotate) Canvas.restore(coords);\r\n                return;\r\n            }\r\n            let y = Canvas.height - coords[1];\r\n            Canvas.ctx.arc(parseInt(coords[0]), parseInt(y), radius, 0, Math.PI*2);\r\n            \r\n            if (typeof rotate == 'number') {\r\n                let tmp = rotate%(Math.PI*2) - Math.PI/2;\r\n                Canvas.ctx.arc(parseInt(coords[0]), parseInt(y), radius + 2, tmp-Math.PI/4, tmp+Math.PI/4);\r\n                // console.log(\"rendering drone..with rotate:\" + tmp);\r\n            }\r\n\r\n            if (text) Canvas.ctx.fillText(text, coords[0], parseInt(y)-4); \r\n           \r\n            if (fill) {\r\n                Canvas.ctx.fill();\r\n            } else {\r\n                Canvas.ctx.stroke();\r\n            }\r\n        }\r\n        else return;\r\n    }\r\n\r\n    static restore(coords) {\r\n        let y = Canvas.height - coords[1];\r\n        Canvas.ctx.translate(parseInt(-coords[0]), parseInt(-y));\r\n        Canvas.ctx.restore();\r\n    }\r\n\r\n    /**\r\n     * rotate by the obj! \r\n     * first save ctx and translate to the obj center..\r\n     * draw obj after ctx rotate !!\r\n     * then translate back and retore\r\n     */\r\n    static rotateCtx(coords, rotate) {\r\n        Canvas.ctx.save();\r\n        let y = Canvas.height - coords[1];\r\n        Canvas.ctx.translate(parseInt(coords[0]), parseInt(y));\r\n        Canvas.ctx.rotate(rotate);\r\n    }\r\n\r\n    /**\r\n     * drawBar with given Value..\r\n     * x: where to draw in X axis..\r\n     * width: bar width,\r\n     * value: bar y value.\r\n     * fill: fill or stroke. default false.\r\n     */\r\n    static drawBar(x, width, value, fill) {\r\n        let barY = Canvas.height - value;\r\n        if (fill) {\r\n            // fillRect(leftUP.X, Y, RectWidth, RectHeight)\r\n            Canvas.ctx.fillRect(x, barY, width, value);\r\n        } else {\r\n            Canvas.ctx.strokeRect(x, barY, width, value);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * drawRect with given BBox{minX, minY, maxX, maxY}\r\n     */\r\n    static drawRect(bbox, fill=false) {\r\n        let _bbox = new BBOX(bbox),\r\n            rectWidth = _bbox.maxX - _bbox.minX,\r\n            rectHeight = _bbox.maxY - _bbox.minY;\r\n        if (fill) {\r\n            Canvas.ctx.fillRect(_bbox.minX, _bbox.minY, rectWidth, rectHeight);\r\n        } else {\r\n            Canvas.ctx.strokeRect(_bbox.minX, _bbox.minY, rectWidth, rectHeight);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * drawLine with given Value..@Array\r\n     * lwidth : lineWidth @number\r\n     * dash: default false @bool\r\n     * fill: closeLine to a polygon\r\n     */\r\n    static drawLine(data, lwidth, dash, fill) {        \r\n        if (data instanceof Array && data.length > 0) {\r\n            Canvas.ctx.strokeStyle = \"#FF0000\";\r\n            Canvas.ctx.lineWidth = lwidth? lwidth: 2;\r\n            Canvas.ctx.beginPath();\r\n            // for drawing area close with xaxis.. render first point.\r\n            if (fill) {\r\n                Canvas.ctx.moveTo(-100, Canvas.height);\r\n            }\r\n            for (let i = 0; i < data.length; i++) {\r\n                // each point of line contains x, y.\r\n                if (data[i] instanceof Array && data[i].length == 2) {\r\n                    let pointy = Canvas.height - data[i][1];\r\n                    Canvas.ctx.lineTo(data[i][0], pointy);\r\n                }\r\n            }\r\n            if (fill) {\r\n                // close with beginPath point\r\n                Canvas.ctx.lineTo(data[data.length-1][0], Canvas.height);\r\n                Canvas.ctx.closePath();\r\n                // Canvas.ctx.stroke();\r\n                Canvas.ctx.fill(); \r\n            } else {\r\n                Canvas.ctx.stroke();\r\n            }\r\n                \r\n        }\r\n    }\r\n\r\n    /**\r\n     * draw Math.sin with canvas.\r\n     */\r\n    // static drawDemoline() {\r\n    //     let base = 50;\r\n\r\n    // }\r\n\r\n    /**\r\n     * drawBars with given data..\r\n     * width: bar width,\r\n     * data: Array of values..\r\n     * fill: fill or stroke. default false.\r\n     */\r\n    static drawBars(data, fill) {\r\n        Canvas.clearCanv();\r\n        Canvas.ctx.strokeStyle = \"#000\";\r\n        Canvas.setWidth(2);\r\n        let barY, barX = 10; \r\n        if (data instanceof Array) {\r\n            let segWidth = (Canvas.width-20)/data.length;\r\n            let barWidth = segWidth * 0.7;\r\n            for (let i = 0; i < data.length; i ++) {\r\n                Canvas.drawBar(barX, barWidth, data[i]);\r\n                barX += segWidth;\r\n            }\r\n        } else {\r\n            console.error('pls Input Array Data');\r\n        }\r\n        console.warn(\"Bars rendered complete..\");\r\n    }\r\n\r\n    static clearCanv() {\r\n        Canvas.ctx.clearRect(0,0,Canvas.width,Canvas.height);\r\n        // Canvas.setFill(\"#000\");\r\n        // Canvas.ctx.fillRect(0,0,Canvas.width,Canvas.height);\r\n    }\r\n\r\n}\r\n\r\n",
    "static": true,
    "longname": "D:/projects/mapbox-plugins/src/chart/canvas.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 54,
    "kind": "function",
    "name": "BBOX",
    "memberof": "src/chart/canvas.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/chart/canvas.js~BBOX",
    "access": "public",
    "export": false,
    "importPath": "mapbox-plugins/src/chart/canvas.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "params": [
      {
        "name": "opts",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 55,
    "kind": "class",
    "name": "Canvas",
    "memberof": "src/chart/canvas.js",
    "static": true,
    "longname": "src/chart/canvas.js~Canvas",
    "access": "public",
    "export": true,
    "importPath": "mapbox-plugins/src/chart/canvas.js",
    "importStyle": "Canvas",
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 56,
    "kind": "method",
    "name": "init",
    "memberof": "src/chart/canvas.js~Canvas",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/chart/canvas.js~Canvas.init",
    "access": "public",
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "params": [
      {
        "name": "ele",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 57,
    "kind": "method",
    "name": "setStroke",
    "memberof": "src/chart/canvas.js~Canvas",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/chart/canvas.js~Canvas.setStroke",
    "access": "public",
    "description": "set ctx.strokeStyle with rgba() @string",
    "lineNumber": 33,
    "params": [
      {
        "name": "colorStr",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 58,
    "kind": "method",
    "name": "setFill",
    "memberof": "src/chart/canvas.js~Canvas",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/chart/canvas.js~Canvas.setFill",
    "access": "public",
    "description": "set ctx.fillStyle with rgba(). @string",
    "lineNumber": 40,
    "params": [
      {
        "name": "colorStr",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 59,
    "kind": "method",
    "name": "setWidth",
    "memberof": "src/chart/canvas.js~Canvas",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/chart/canvas.js~Canvas.setWidth",
    "access": "public",
    "description": "set ctx.strokeWidth and lineWidth. @number",
    "lineNumber": 47,
    "params": [
      {
        "name": "pixel",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 60,
    "kind": "method",
    "name": "drawPoint",
    "memberof": "src/chart/canvas.js~Canvas",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/chart/canvas.js~Canvas.drawPoint",
    "access": "public",
    "description": "draw Circle with given x, y.\nradius: radius of Circle @number\nfill @bool",
    "lineNumber": 60,
    "params": [
      {
        "name": "coords",
        "types": [
          "*"
        ]
      },
      {
        "name": "radius",
        "types": [
          "*"
        ]
      },
      {
        "name": "fill",
        "types": [
          "*"
        ]
      },
      {
        "name": "image",
        "types": [
          "*"
        ]
      },
      {
        "name": "rotate",
        "types": [
          "*"
        ]
      },
      {
        "name": "text",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 61,
    "kind": "method",
    "name": "restore",
    "memberof": "src/chart/canvas.js~Canvas",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/chart/canvas.js~Canvas.restore",
    "access": "public",
    "description": null,
    "lineNumber": 103,
    "undocument": true,
    "params": [
      {
        "name": "coords",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 62,
    "kind": "method",
    "name": "rotateCtx",
    "memberof": "src/chart/canvas.js~Canvas",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/chart/canvas.js~Canvas.rotateCtx",
    "access": "public",
    "description": "rotate by the obj! \nfirst save ctx and translate to the obj center..\ndraw obj after ctx rotate !!\nthen translate back and retore",
    "lineNumber": 115,
    "params": [
      {
        "name": "coords",
        "types": [
          "*"
        ]
      },
      {
        "name": "rotate",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 63,
    "kind": "method",
    "name": "drawBar",
    "memberof": "src/chart/canvas.js~Canvas",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/chart/canvas.js~Canvas.drawBar",
    "access": "public",
    "description": "drawBar with given Value..\nx: where to draw in X axis..\nwidth: bar width,\nvalue: bar y value.\nfill: fill or stroke. default false.",
    "lineNumber": 129,
    "params": [
      {
        "name": "x",
        "types": [
          "*"
        ]
      },
      {
        "name": "width",
        "types": [
          "*"
        ]
      },
      {
        "name": "value",
        "types": [
          "*"
        ]
      },
      {
        "name": "fill",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 64,
    "kind": "method",
    "name": "drawRect",
    "memberof": "src/chart/canvas.js~Canvas",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/chart/canvas.js~Canvas.drawRect",
    "access": "public",
    "description": "drawRect with given BBox{minX, minY, maxX, maxY}",
    "lineNumber": 142,
    "params": [
      {
        "name": "bbox",
        "types": [
          "*"
        ]
      },
      {
        "name": "fill",
        "optional": true,
        "types": [
          "boolean"
        ],
        "defaultRaw": false,
        "defaultValue": "false"
      }
    ],
    "return": null
  },
  {
    "__docId__": 65,
    "kind": "method",
    "name": "drawLine",
    "memberof": "src/chart/canvas.js~Canvas",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/chart/canvas.js~Canvas.drawLine",
    "access": "public",
    "description": "drawLine with given Value..@Array\nlwidth : lineWidth @number\ndash: default false @bool\nfill: closeLine to a polygon",
    "lineNumber": 159,
    "params": [
      {
        "name": "data",
        "types": [
          "*"
        ]
      },
      {
        "name": "lwidth",
        "types": [
          "*"
        ]
      },
      {
        "name": "dash",
        "types": [
          "*"
        ]
      },
      {
        "name": "fill",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 66,
    "kind": "method",
    "name": "drawBars",
    "memberof": "src/chart/canvas.js~Canvas",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/chart/canvas.js~Canvas.drawBars",
    "access": "public",
    "description": "drawBars with given data..\nwidth: bar width,\ndata: Array of values..\nfill: fill or stroke. default false.",
    "lineNumber": 202,
    "params": [
      {
        "name": "data",
        "types": [
          "*"
        ]
      },
      {
        "name": "fill",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 67,
    "kind": "method",
    "name": "clearCanv",
    "memberof": "src/chart/canvas.js~Canvas",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/chart/canvas.js~Canvas.clearCanv",
    "access": "public",
    "description": null,
    "lineNumber": 220,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 68,
    "kind": "file",
    "name": "src/chart/chartmodel.js",
    "content": "import Canvas from './canvas';\r\n\r\nexport default class chart {\r\n    // init chart bind with a div element @object.\r\n    constructor(opts) {\r\n        this.ele = opts.ele? opts.ele: null;\r\n        this.data = opts.data? opts.data: [];\r\n        this.type = opts.type? opts.type: null;\r\n        this.maxValue = 0;\r\n        this.rotate = opts.rotate? opts.rotate: 0;\r\n        // specify url as data source.. update by GET.\r\n        this.url = opts.url? opts.url: null;\r\n    }\r\n\r\n    // new Promise to GET latest data, then redraw\r\n    updateData() {\r\n       // new Promise() \r\n    }\r\n\r\n    /**\r\n     * set chart.data with Array instance, then redraw.\r\n     */\r\n    setData(data) {\r\n        this.data = data.coords;\r\n        this.rotate = data.rotate;\r\n        this.dataName = data.name;\r\n        Canvas.clearCanv();\r\n        this.render();\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * render data in Canvas according data dimension\r\n     * width different strategy..\r\n     */\r\n    render() {\r\n        // if line or poly\r\n        if (this.data instanceof Array && this.data.length > 0 && this.data[0] instanceof Array ) {\r\n            Canvas.drawLine(this.data, null, null);\r\n        } else if (this.data instanceof Array && this.data.length > 0) {\r\n            if (this.url) {\r\n                // render point with icon image.\r\n                Canvas.drawPoint(this.data, 20, null, this.url, this.rotate, this.dataName);\r\n            } else {\r\n                Canvas.drawPoint(this.data, 2, null, null, this.rotate, this.dataName);\r\n            } \r\n        }\r\n    }\r\n\r\n    // stat max value of Data and set to maxValue. only for 1 dimension data.[y1, y2, y3 ...]\r\n    statMax() {\r\n        if (typeof this.data == Array && this.data.length > 0) {\r\n            this.data.forEach((value) => {\r\n                if (this.maxValue < value)\r\n                    this.maxValue = value;\r\n            });\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /**\r\n\t * generate Math.sin/cos line data..\r\n     * \r\n\t * sin: 'sin'/'cos'/'tan' @string\r\n\t * xEnd: finally returned points number.\r\n\t * fatness: fatness of line. bigger the fatter will the line be.\r\n\t * offset: offset to left with animation. @number\r\n     * \r\n     * Return: 2 dimension Array. [[x1,y1], [x2,y2] ...] @Array\r\n\t */\r\n\tgenerateSinLine(sin, xEnd, fatness, offset){\r\n\t\tlet points = [], y = 0, yheight = 50, ybase = 50,\r\n            fat = fatness? fatness: 20.0, off = offset? offset: 0;\r\n\t\t// 像素个数 xEnd. \r\n\t\tfor (let x = 0; x < xEnd; x ++) {\r\n\t\t\tif (sin == 'sin') {\r\n\t\t\t\ty = parseInt(Math.sin(x/fat) * yheight);\r\n\t\t\t} else if (sin == 'cos')\r\n\t\t\t\ty = parseInt(Math.cos(x/fat) * yheight);\r\n\t\t\telse if (sin == 'tan') \r\n\t\t\t\ty = parseInt(Math.tan(x/fat) * yheight);\r\n\t\t\t\r\n\t\t\tpoints.push([x - off, y + ybase]);\r\n\t\t}\r\n\t\treturn points;\r\n\t}\r\n}\r\n\r\nlet strategies = {\r\n\r\n}\r\n",
    "static": true,
    "longname": "D:/projects/mapbox-plugins/src/chart/chartmodel.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 69,
    "kind": "class",
    "name": "chart",
    "memberof": "src/chart/chartmodel.js",
    "static": true,
    "longname": "src/chart/chartmodel.js~chart",
    "access": "public",
    "export": true,
    "importPath": "mapbox-plugins/src/chart/chartmodel.js",
    "importStyle": "chart",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 70,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/chart/chartmodel.js~chart",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/chart/chartmodel.js~chart#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 5,
    "undocument": true
  },
  {
    "__docId__": 71,
    "kind": "member",
    "name": "ele",
    "memberof": "src/chart/chartmodel.js~chart",
    "static": false,
    "longname": "src/chart/chartmodel.js~chart#ele",
    "access": "public",
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 72,
    "kind": "member",
    "name": "data",
    "memberof": "src/chart/chartmodel.js~chart",
    "static": false,
    "longname": "src/chart/chartmodel.js~chart#data",
    "access": "public",
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 73,
    "kind": "member",
    "name": "type",
    "memberof": "src/chart/chartmodel.js~chart",
    "static": false,
    "longname": "src/chart/chartmodel.js~chart#type",
    "access": "public",
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 74,
    "kind": "member",
    "name": "maxValue",
    "memberof": "src/chart/chartmodel.js~chart",
    "static": false,
    "longname": "src/chart/chartmodel.js~chart#maxValue",
    "access": "public",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 75,
    "kind": "member",
    "name": "rotate",
    "memberof": "src/chart/chartmodel.js~chart",
    "static": false,
    "longname": "src/chart/chartmodel.js~chart#rotate",
    "access": "public",
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 76,
    "kind": "member",
    "name": "url",
    "memberof": "src/chart/chartmodel.js~chart",
    "static": false,
    "longname": "src/chart/chartmodel.js~chart#url",
    "access": "public",
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 77,
    "kind": "method",
    "name": "updateData",
    "memberof": "src/chart/chartmodel.js~chart",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/chart/chartmodel.js~chart#updateData",
    "access": "public",
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 78,
    "kind": "method",
    "name": "setData",
    "memberof": "src/chart/chartmodel.js~chart",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/chart/chartmodel.js~chart#setData",
    "access": "public",
    "description": "set chart.data with Array instance, then redraw.",
    "lineNumber": 23,
    "params": [
      {
        "name": "data",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 81,
    "kind": "member",
    "name": "dataName",
    "memberof": "src/chart/chartmodel.js~chart",
    "static": false,
    "longname": "src/chart/chartmodel.js~chart#dataName",
    "access": "public",
    "description": null,
    "lineNumber": 26,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 82,
    "kind": "method",
    "name": "render",
    "memberof": "src/chart/chartmodel.js~chart",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/chart/chartmodel.js~chart#render",
    "access": "public",
    "description": "render data in Canvas according data dimension\nwidth different strategy..",
    "lineNumber": 36,
    "params": [],
    "return": null
  },
  {
    "__docId__": 83,
    "kind": "method",
    "name": "statMax",
    "memberof": "src/chart/chartmodel.js~chart",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/chart/chartmodel.js~chart#statMax",
    "access": "public",
    "description": null,
    "lineNumber": 51,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 85,
    "kind": "method",
    "name": "generateSinLine",
    "memberof": "src/chart/chartmodel.js~chart",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/chart/chartmodel.js~chart#generateSinLine",
    "access": "public",
    "description": "generate Math.sin/cos line data..\n\nsin: 'sin'/'cos'/'tan' @string\nxEnd: finally returned points number.\nfatness: fatness of line. bigger the fatter will the line be.\noffset: offset to left with animation. @number\n\nReturn: 2 dimension Array. [[x1,y1], [x2,y2] ...] @Array",
    "lineNumber": 71,
    "params": [
      {
        "name": "sin",
        "types": [
          "*"
        ]
      },
      {
        "name": "xEnd",
        "types": [
          "*"
        ]
      },
      {
        "name": "fatness",
        "types": [
          "*"
        ]
      },
      {
        "name": "offset",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 86,
    "kind": "variable",
    "name": "strategies",
    "memberof": "src/chart/chartmodel.js",
    "static": true,
    "longname": "src/chart/chartmodel.js~strategies",
    "access": "public",
    "export": false,
    "importPath": "mapbox-plugins/src/chart/chartmodel.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 89,
    "undocument": true,
    "type": {
      "types": [
        "{}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 87,
    "kind": "file",
    "name": "src/chart/hyxCanvas.js",
    "content": "// hyxCanvas.js\r\n\r\nwindow.onload=function(){\r\n        var points = [];\r\n        logFlag = 0;\r\n        initCanvas();\r\n        /*inter = setInterval(function(){\r\n            var newPoint = Math.random()*200;\r\n            if(points.length>60){\r\n                points.shift();\r\n            }\r\n            points.push(newPoint);\r\n            drawLines(points);\r\n\r\n        },1000);\r\n        clearInterval(inter);*/\r\n    }\r\n\r\n    canvWidth = 600;\r\n    canvHeight = 400;   \r\n    (function gl(){\r\n        g = \"aaa\";        \r\n        env = 11;\r\n        val = 22;\r\n        container = null;\r\n        getVal = function (){\r\n            return val;\r\n        }\r\n    })();\r\n    //匿名函数中的全局变量自动附加为 window的属性（window代表窗体，包含location，history）\r\n\r\n    function gele(id){\r\n        return document.getElementById(id);\r\n    }\r\n\r\n    function local(name,age){\r\n        this.name = name;\r\n        this.age = age;\r\n        return this;\r\n    }\r\n    //绘制直线和曲线路径 beginPath()开始新路径 moveTo()设定起点 lineTo()直线 arcTo()\r\n    function initCanvas(){\r\n        //var container = document.createElement('canvas');\r\n        container = gele(\"canv\");\r\n        container.width = canvWidth;\r\n        container.height = canvHeight;\r\n        \r\n        ctx = container.getContext('2d');\r\n        ctx.strokeStyle = \"#03A9F4\";\r\n        ctx.lineWidth = 1;\r\n                \r\n    }    \r\n    //var inter = setInterval(drawRect,1000);\r\n    //inter.clear();\r\n\r\n    var drawRect = function(){\r\n        //清除上次的结果\r\n        clearCanv();\r\n        //定义随机颜色填充\r\n        //ctx.fillStyle = randRgba();\r\n        ctx.fillStyle = \"#03A9F4\";\r\n        var barX = -10, barHeight;\r\n        for (var i = 18; i >= 0; i--) {\r\n            barX += 30;\r\n            barHeight = Math.random()*-200;\r\n            //ctx.strokeRect(barX,canvHeight,20, barHeight);\r\n            ctx.fillRect(barX,canvHeight,20, barHeight);\r\n        }        \r\n    }\r\n\r\n    // 绘制线 比较特别，一段折线需要一个起始点。用moveTo指定起始点。\r\n    // 需要传入一个点数据进入队列，var \r\n    function drawLine(){\r\n        clearCanv();\r\n        //定义随机颜色填充\r\n        ctx.beginPath();\r\n        ctx.strokeStyle = \"#03A9F4\";\r\n        //定义线条宽度（像素）\r\n        ctx.lineWidth = 2;\r\n        var pointX = 20, pointY = Math.random()*200;\r\n        ctx.moveTo(pointX, pointY);\r\n        for (var i = 18; i >= 0; i--) {\r\n            pointX += 30;\r\n            pointY = Math.random()*200;\r\n            ctx.lineTo(pointX,pointY);            \r\n        }\r\n        //闭合曲线，可以填充为多边形。\r\n        //ctx.closePath();\r\n        ctx.stroke();\r\n    }\r\n\r\n    //针对流数据的展示，从最后一个点开始绘制。\r\n    function drawLines(points){\r\n        clearCanv();\r\n        ctx.beginPath();\r\n        ctx.lineStyle = \"#03A9F4\";\r\n        ctx.lineWidth =2;\r\n        var pointX = canvWidth;\r\n        if( points instanceof Array ){\r\n            var pnums = points.length;\r\n            var pointY = points[pnums-1];\r\n            ctx.moveTo(pointX, pointY);\r\n            for (var i = points.length - 2; i >= 0; i--) {\r\n                pointY = points[i];\r\n                pointX -= 10;\r\n                ctx.lineTo(pointX, pointY);\r\n            }\r\n            ctx.stroke();\r\n        }\r\n    }\r\n\r\n    function deg2rad(deg){\r\n        return deg * Math.PI / 180;\r\n    }\r\n    function rad2deg(rad){\r\n        return rad * 180 / Math.PI;\r\n    }\r\n\r\n    //arc 绘制弧线。\r\n    function drawArc(){\r\n        //arc(x,y,radius,startAngle,endAngle,anticlockwise)\r\n        var endAgle = 0.0;\r\n        //开始一个新的绘制路径\r\n        ctx.beginPath();\r\n        ctx.strokeStyle = \"blue\";\r\n        //ctx.moveTo(x, 190);\r\n        endAgle +=(2 * Math.PI)/5;\r\n        ctx.arc(50,50,50,0,Math.PI/2,false);\r\n        ctx.stroke();        \r\n    }\r\n    //drawArc();\r\n\r\n    var randColor =  function(){\r\n\r\n        var hexR = Math.floor( Math.random()*255).toString(16);\r\n        var hexG = Math.floor( Math.random()*255).toString(16);\r\n        var hexB = Math.floor( Math.random()*255).toString(16);\r\n        return \"#\"+ hexR +hexG +hexB;\r\n    }\r\n\r\n    // 函数表达式，必须在调用前声明。\r\n    var randRgba = function (){\r\n        var decR = Math.floor( Math.random()*255);\r\n        var decG = Math.floor( Math.random()*255);\r\n        var decB = Math.floor( Math.random()*255);\r\n        return \"rgba(\" + decR + \",\" + decG + \",\" + decB + \",\" + \"0.5)\";\r\n    }\r\n\r\n    // 函数声明，在按顺序执行JS代码 之前就解析。\r\n    function drawPoint(x, y, width){\r\n        if (typeof x == \"number\" && typeof y == \"number\"){\r\n            ctx.beginPath();\r\n            //定义随机颜色边线 randRgba();\r\n            ctx.strokeStyle = \"rgba(255,255,255,0.7)\";\r\n            ctx.fillStyle = \"rgba(10,10,200,0.5)\";\r\n            ctx.strokeWidth = 1;\r\n            if (typeof arguments[2] == \"undefined\"){\r\n                var width = 4;\r\n            }\r\n            ctx.arc(x, y, width, 0, Math.PI*2, false);\r\n            //ctx.stroke();\r\n            ctx.fill();\r\n        }\r\n        else return;\r\n    }\r\n\r\n    //随机生成 泡泡点\r\n    function randPoint(nums){\r\n        if(typeof nums == \"number\"){\r\n            clearCanv()\r\n            var pointX, pointY;\r\n            for (var i = nums - 1; i >= 0; i--) {\r\n                pointX = Math.random()*canvWidth;\r\n                pointY = Math.random()*canvHeight;\r\n                radius = Math.random()*10;\r\n                drawPoint(pointX, pointY, radius);\r\n            };            \r\n        }\r\n\r\n    }\r\n    function clearCanv(){\r\n        ctx.clearRect(0,0,canvWidth,canvHeight);\r\n    }",
    "static": true,
    "longname": "D:/projects/mapbox-plugins/src/chart/hyxCanvas.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 88,
    "kind": "function",
    "name": "onload",
    "memberof": "src/chart/hyxCanvas.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/chart/hyxCanvas.js~onload",
    "access": "public",
    "export": false,
    "importPath": "mapbox-plugins/src/chart/hyxCanvas.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "params": [],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 89,
    "kind": "function",
    "name": "gele",
    "memberof": "src/chart/hyxCanvas.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/chart/hyxCanvas.js~gele",
    "access": "public",
    "export": false,
    "importPath": "mapbox-plugins/src/chart/hyxCanvas.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 32,
    "undocument": true,
    "params": [
      {
        "name": "id",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 90,
    "kind": "function",
    "name": "local",
    "memberof": "src/chart/hyxCanvas.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/chart/hyxCanvas.js~local",
    "access": "public",
    "export": false,
    "importPath": "mapbox-plugins/src/chart/hyxCanvas.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 36,
    "undocument": true,
    "params": [
      {
        "name": "name",
        "types": [
          "*"
        ]
      },
      {
        "name": "age",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 91,
    "kind": "function",
    "name": "initCanvas",
    "memberof": "src/chart/hyxCanvas.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/chart/hyxCanvas.js~initCanvas",
    "access": "public",
    "export": false,
    "importPath": "mapbox-plugins/src/chart/hyxCanvas.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 42,
    "undocument": true,
    "params": [],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 92,
    "kind": "function",
    "name": "drawRect",
    "memberof": "src/chart/hyxCanvas.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/chart/hyxCanvas.js~drawRect",
    "access": "public",
    "export": false,
    "importPath": "mapbox-plugins/src/chart/hyxCanvas.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 56,
    "undocument": true,
    "params": [],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 93,
    "kind": "function",
    "name": "drawLine",
    "memberof": "src/chart/hyxCanvas.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/chart/hyxCanvas.js~drawLine",
    "access": "public",
    "export": false,
    "importPath": "mapbox-plugins/src/chart/hyxCanvas.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 73,
    "undocument": true,
    "params": [],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 94,
    "kind": "function",
    "name": "drawLines",
    "memberof": "src/chart/hyxCanvas.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/chart/hyxCanvas.js~drawLines",
    "access": "public",
    "export": false,
    "importPath": "mapbox-plugins/src/chart/hyxCanvas.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 93,
    "undocument": true,
    "params": [
      {
        "name": "points",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 95,
    "kind": "function",
    "name": "deg2rad",
    "memberof": "src/chart/hyxCanvas.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/chart/hyxCanvas.js~deg2rad",
    "access": "public",
    "export": false,
    "importPath": "mapbox-plugins/src/chart/hyxCanvas.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 112,
    "undocument": true,
    "params": [
      {
        "name": "deg",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 96,
    "kind": "function",
    "name": "rad2deg",
    "memberof": "src/chart/hyxCanvas.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/chart/hyxCanvas.js~rad2deg",
    "access": "public",
    "export": false,
    "importPath": "mapbox-plugins/src/chart/hyxCanvas.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 115,
    "undocument": true,
    "params": [
      {
        "name": "rad",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 97,
    "kind": "function",
    "name": "drawArc",
    "memberof": "src/chart/hyxCanvas.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/chart/hyxCanvas.js~drawArc",
    "access": "public",
    "export": false,
    "importPath": "mapbox-plugins/src/chart/hyxCanvas.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 120,
    "undocument": true,
    "params": [],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 98,
    "kind": "function",
    "name": "randColor",
    "memberof": "src/chart/hyxCanvas.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/chart/hyxCanvas.js~randColor",
    "access": "public",
    "export": false,
    "importPath": "mapbox-plugins/src/chart/hyxCanvas.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 133,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 99,
    "kind": "function",
    "name": "randRgba",
    "memberof": "src/chart/hyxCanvas.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/chart/hyxCanvas.js~randRgba",
    "access": "public",
    "export": false,
    "importPath": "mapbox-plugins/src/chart/hyxCanvas.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 142,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 100,
    "kind": "function",
    "name": "drawPoint",
    "memberof": "src/chart/hyxCanvas.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/chart/hyxCanvas.js~drawPoint",
    "access": "public",
    "export": false,
    "importPath": "mapbox-plugins/src/chart/hyxCanvas.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 150,
    "undocument": true,
    "params": [
      {
        "name": "x",
        "types": [
          "*"
        ]
      },
      {
        "name": "y",
        "types": [
          "*"
        ]
      },
      {
        "name": "width",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 101,
    "kind": "function",
    "name": "randPoint",
    "memberof": "src/chart/hyxCanvas.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/chart/hyxCanvas.js~randPoint",
    "access": "public",
    "export": false,
    "importPath": "mapbox-plugins/src/chart/hyxCanvas.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 168,
    "undocument": true,
    "params": [
      {
        "name": "nums",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 102,
    "kind": "function",
    "name": "clearCanv",
    "memberof": "src/chart/hyxCanvas.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/chart/hyxCanvas.js~clearCanv",
    "access": "public",
    "export": false,
    "importPath": "mapbox-plugins/src/chart/hyxCanvas.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 181,
    "undocument": true,
    "params": [],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 103,
    "kind": "file",
    "name": "src/config.js",
    "content": "export default {\r\n    tk: \"pk.eyJ1IjoiaHVhbmd5aXhpdSIsImEiOiI2WjVWR1hFIn0.1P90Q-tkbHS38BvnrhTI6w\",\r\n    mapStyles: {\r\n        \"version\": 8,\r\n        \"sprite\": \"https://alex2wong.github.io/mapbox-plugins/assets/sprite\",\r\n        // \"sprite\": \"../../assets/sprite\",\r\n        \"glyphs\": \"https://alex2wong.github.io/mapbox-plugins/{fontstack}/{range}.pbf\",\r\n        \"sources\": {\r\n            \"custom-tms\": {   \r\n                'type': 'raster',\r\n                'tiles': [\r\n                    // \"https://huangyixiu.co:3003/proxy?proxyURI=http://map.geoq.cn/ArcGIS/rest/services/ChinaOnlineStreetPurplishBlue/MapServer/tile/{z}/{y}/{x}\",\r\n                    \"http://www.google.cn/maps/vt?lyrs=s@702&gl=cn&x={x}&y={y}&z={z}\",\r\n                    // \"https://c.tiles.mapbox.com/v3/osmbuildings.kbpalbpk/{z}/{x}/{y}.png\",\r\n                    // \"http://b.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                ],\r\n                'tileSize': 256\r\n            },\r\n        },\r\n        \"layers\": [\r\n            {\r\n                'id': 'custom-tms',\r\n                'type': 'raster',\r\n                'source': 'custom-tms',\r\n                'paint': {}\r\n            },\r\n        ]\r\n    }\r\n}",
    "static": true,
    "longname": "D:/projects/mapbox-plugins/src/config.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 104,
    "kind": "file",
    "name": "src/const.js",
    "content": "export default class Const {\r\n}\r\n\r\n// Static Props.\r\nConst.DroneParam = {\r\n    MAXSPEED: 15,\r\n    FIRINGTIME: 800,\r\n    LIFE: 10,\r\n    // Firing range.. 0.2 rad in LngLat\r\n    RANGE: 0.2 \r\n};\r\n\r\nConst.Images = {\r\n    Plane: '../assets/plane'\r\n}\r\n\r\nConst.FileType = {\r\n    'png': 'IMG',\r\n    'jpg': 'IMG',\r\n    'gif': 'IMG',\r\n    'mp4': 'VIDEO'\r\n}\r\n\r\nConst.SpritesUrl = \"https://alex2wong.github.io/mapbox-plugins/assets/sprite\";\r\n\r\nConst.Sprites = {\"airfield-15\":{\"width\":21,\"height\":21,\"x\":0,\"y\":0,\"pixelRatio\":1},\"airport-15\":{\"width\":21,\"height\":21,\"x\":21,\"y\":0,\"pixelRatio\":1},\"alcohol-shop-15\":{\"width\":21,\"height\":21,\"x\":0,\"y\":21,\"pixelRatio\":1},\"amusement-park-15\":{\"width\":21,\"height\":21,\"x\":21,\"y\":21,\"pixelRatio\":1},\"aquarium-15\":{\"width\":21,\"height\":21,\"x\":42,\"y\":0,\"pixelRatio\":1},\"art-gallery-15\":{\"width\":21,\"height\":21,\"x\":63,\"y\":0,\"pixelRatio\":1},\"attraction-15\":{\"width\":21,\"height\":21,\"x\":42,\"y\":21,\"pixelRatio\":1},\"bakery-15\":{\"width\":21,\"height\":21,\"x\":63,\"y\":21,\"pixelRatio\":1},\"bank-15\":{\"width\":21,\"height\":21,\"x\":0,\"y\":42,\"pixelRatio\":1},\"bar-15\":{\"width\":21,\"height\":21,\"x\":21,\"y\":42,\"pixelRatio\":1},\"beer-15\":{\"width\":21,\"height\":21,\"x\":42,\"y\":42,\"pixelRatio\":1},\"bicycle-15\":{\"width\":21,\"height\":21,\"x\":63,\"y\":42,\"pixelRatio\":1},\"bicycle-share-15\":{\"width\":21,\"height\":21,\"x\":0,\"y\":63,\"pixelRatio\":1},\"bus-15\":{\"width\":21,\"height\":21,\"x\":21,\"y\":63,\"pixelRatio\":1},\"cafe-15\":{\"width\":21,\"height\":21,\"x\":42,\"y\":63,\"pixelRatio\":1},\"campsite-15\":{\"width\":21,\"height\":21,\"x\":63,\"y\":63,\"pixelRatio\":1},\"car-15\":{\"width\":21,\"height\":21,\"x\":84,\"y\":0,\"pixelRatio\":1},\"castle-15\":{\"width\":21,\"height\":21,\"x\":105,\"y\":0,\"pixelRatio\":1},\"cemetery-15\":{\"width\":21,\"height\":21,\"x\":126,\"y\":0,\"pixelRatio\":1},\"cinema-15\":{\"width\":21,\"height\":21,\"x\":147,\"y\":0,\"pixelRatio\":1},\"circle-15\":{\"width\":21,\"height\":21,\"x\":84,\"y\":21,\"pixelRatio\":1},\"circle-stroked-15\":{\"width\":21,\"height\":21,\"x\":105,\"y\":21,\"pixelRatio\":1},\"clothing-store-15\":{\"width\":21,\"height\":21,\"x\":126,\"y\":21,\"pixelRatio\":1},\"college-15\":{\"width\":21,\"height\":21,\"x\":147,\"y\":21,\"pixelRatio\":1},\"dentist-15\":{\"width\":21,\"height\":21,\"x\":84,\"y\":42,\"pixelRatio\":1},\"doctor-15\":{\"width\":21,\"height\":21,\"x\":105,\"y\":42,\"pixelRatio\":1},\"dog-park-15\":{\"width\":21,\"height\":21,\"x\":126,\"y\":42,\"pixelRatio\":1},\"drinking-water-15\":{\"width\":21,\"height\":21,\"x\":147,\"y\":42,\"pixelRatio\":1},\"embassy-15\":{\"width\":21,\"height\":21,\"x\":84,\"y\":63,\"pixelRatio\":1},\"entrance-15\":{\"width\":21,\"height\":21,\"x\":105,\"y\":63,\"pixelRatio\":1},\"fast-food-15\":{\"width\":21,\"height\":21,\"x\":126,\"y\":63,\"pixelRatio\":1},\"ferry-15\":{\"width\":21,\"height\":21,\"x\":147,\"y\":63,\"pixelRatio\":1},\"fire-station-15\":{\"width\":21,\"height\":21,\"x\":0,\"y\":84,\"pixelRatio\":1},\"fuel-15\":{\"width\":21,\"height\":21,\"x\":21,\"y\":84,\"pixelRatio\":1},\"garden-15\":{\"width\":21,\"height\":21,\"x\":42,\"y\":84,\"pixelRatio\":1},\"golf-15\":{\"width\":21,\"height\":21,\"x\":63,\"y\":84,\"pixelRatio\":1},\"grocery-15\":{\"width\":21,\"height\":21,\"x\":84,\"y\":84,\"pixelRatio\":1},\"harbor-15\":{\"width\":21,\"height\":21,\"x\":105,\"y\":84,\"pixelRatio\":1},\"heliport-15\":{\"width\":21,\"height\":21,\"x\":126,\"y\":84,\"pixelRatio\":1},\"hospital-15\":{\"width\":21,\"height\":21,\"x\":147,\"y\":84,\"pixelRatio\":1},\"ice-cream-15\":{\"width\":21,\"height\":21,\"x\":0,\"y\":105,\"pixelRatio\":1},\"information-15\":{\"width\":21,\"height\":21,\"x\":21,\"y\":105,\"pixelRatio\":1},\"laundry-15\":{\"width\":21,\"height\":21,\"x\":42,\"y\":105,\"pixelRatio\":1},\"library-15\":{\"width\":21,\"height\":21,\"x\":63,\"y\":105,\"pixelRatio\":1},\"lodging-15\":{\"width\":21,\"height\":21,\"x\":84,\"y\":105,\"pixelRatio\":1},\"marker-15\":{\"width\":21,\"height\":21,\"x\":105,\"y\":105,\"pixelRatio\":1},\"monument-15\":{\"width\":21,\"height\":21,\"x\":126,\"y\":105,\"pixelRatio\":1},\"mountain-15\":{\"width\":21,\"height\":21,\"x\":147,\"y\":105,\"pixelRatio\":1},\"museum-15\":{\"width\":21,\"height\":21,\"x\":0,\"y\":126,\"pixelRatio\":1},\"music-15\":{\"width\":21,\"height\":21,\"x\":21,\"y\":126,\"pixelRatio\":1},\"park-15\":{\"width\":21,\"height\":21,\"x\":42,\"y\":126,\"pixelRatio\":1},\"pharmacy-15\":{\"width\":21,\"height\":21,\"x\":63,\"y\":126,\"pixelRatio\":1},\"picnic-site-15\":{\"width\":21,\"height\":21,\"x\":84,\"y\":126,\"pixelRatio\":1},\"place-of-worship-15\":{\"width\":21,\"height\":21,\"x\":105,\"y\":126,\"pixelRatio\":1},\"playground-15\":{\"width\":21,\"height\":21,\"x\":126,\"y\":126,\"pixelRatio\":1},\"police-15\":{\"width\":21,\"height\":21,\"x\":147,\"y\":126,\"pixelRatio\":1},\"post-15\":{\"width\":21,\"height\":21,\"x\":0,\"y\":147,\"pixelRatio\":1},\"prison-15\":{\"width\":21,\"height\":21,\"x\":21,\"y\":147,\"pixelRatio\":1},\"rail-15\":{\"width\":21,\"height\":21,\"x\":42,\"y\":147,\"pixelRatio\":1},\"rail-light-15\":{\"width\":21,\"height\":21,\"x\":63,\"y\":147,\"pixelRatio\":1},\"rail-metro-15\":{\"width\":21,\"height\":21,\"x\":84,\"y\":147,\"pixelRatio\":1},\"religious-christian-15\":{\"width\":21,\"height\":21,\"x\":105,\"y\":147,\"pixelRatio\":1},\"religious-jewish-15\":{\"width\":21,\"height\":21,\"x\":126,\"y\":147,\"pixelRatio\":1},\"religious-muslim-15\":{\"width\":21,\"height\":21,\"x\":147,\"y\":147,\"pixelRatio\":1},\"restaurant-15\":{\"width\":21,\"height\":21,\"x\":168,\"y\":0,\"pixelRatio\":1},\"rocket-15\":{\"width\":21,\"height\":21,\"x\":189,\"y\":0,\"pixelRatio\":1},\"school-15\":{\"width\":21,\"height\":21,\"x\":210,\"y\":0,\"pixelRatio\":1},\"shop-15\":{\"width\":21,\"height\":21,\"x\":231,\"y\":0,\"pixelRatio\":1},\"stadium-15\":{\"width\":21,\"height\":21,\"x\":252,\"y\":0,\"pixelRatio\":1},\"star-15\":{\"width\":21,\"height\":21,\"x\":273,\"y\":0,\"pixelRatio\":1},\"suitcase-15\":{\"width\":21,\"height\":21,\"x\":294,\"y\":0,\"pixelRatio\":1},\"swimming-15\":{\"width\":21,\"height\":21,\"x\":315,\"y\":0,\"pixelRatio\":1},\"theatre-15\":{\"width\":21,\"height\":21,\"x\":168,\"y\":21,\"pixelRatio\":1},\"toilet-15\":{\"width\":21,\"height\":21,\"x\":189,\"y\":21,\"pixelRatio\":1},\"town-hall-15\":{\"width\":21,\"height\":21,\"x\":210,\"y\":21,\"pixelRatio\":1},\"triangle-15\":{\"width\":21,\"height\":21,\"x\":231,\"y\":21,\"pixelRatio\":1},\"triangle-stroked-15\":{\"width\":21,\"height\":21,\"x\":252,\"y\":21,\"pixelRatio\":1},\"veterinary-15\":{\"width\":21,\"height\":21,\"x\":273,\"y\":21,\"pixelRatio\":1},\"volcano-15\":{\"width\":21,\"height\":21,\"x\":294,\"y\":21,\"pixelRatio\":1},\"zoo-15\":{\"width\":21,\"height\":21,\"x\":315,\"y\":21,\"pixelRatio\":1},\"airfield-11\":{\"width\":17,\"height\":17,\"x\":168,\"y\":42,\"pixelRatio\":1},\"airport-11\":{\"width\":17,\"height\":17,\"x\":185,\"y\":42,\"pixelRatio\":1},\"alcohol-shop-11\":{\"width\":17,\"height\":17,\"x\":202,\"y\":42,\"pixelRatio\":1},\"amusement-park-11\":{\"width\":17,\"height\":17,\"x\":219,\"y\":42,\"pixelRatio\":1},\"aquarium-11\":{\"width\":17,\"height\":17,\"x\":236,\"y\":42,\"pixelRatio\":1},\"art-gallery-11\":{\"width\":17,\"height\":17,\"x\":253,\"y\":42,\"pixelRatio\":1},\"attraction-11\":{\"width\":17,\"height\":17,\"x\":270,\"y\":42,\"pixelRatio\":1},\"bakery-11\":{\"width\":17,\"height\":17,\"x\":287,\"y\":42,\"pixelRatio\":1},\"bank-11\":{\"width\":17,\"height\":17,\"x\":304,\"y\":42,\"pixelRatio\":1},\"bar-11\":{\"width\":17,\"height\":17,\"x\":168,\"y\":63,\"pixelRatio\":1},\"beer-11\":{\"width\":17,\"height\":17,\"x\":185,\"y\":63,\"pixelRatio\":1},\"bicycle-11\":{\"width\":17,\"height\":17,\"x\":202,\"y\":63,\"pixelRatio\":1},\"bicycle-share-11\":{\"width\":17,\"height\":17,\"x\":219,\"y\":63,\"pixelRatio\":1},\"bus-11\":{\"width\":17,\"height\":17,\"x\":236,\"y\":63,\"pixelRatio\":1},\"cafe-11\":{\"width\":17,\"height\":17,\"x\":253,\"y\":63,\"pixelRatio\":1},\"campsite-11\":{\"width\":17,\"height\":17,\"x\":270,\"y\":63,\"pixelRatio\":1},\"car-11\":{\"width\":17,\"height\":17,\"x\":287,\"y\":63,\"pixelRatio\":1},\"castle-11\":{\"width\":17,\"height\":17,\"x\":304,\"y\":63,\"pixelRatio\":1},\"cemetery-11\":{\"width\":17,\"height\":17,\"x\":168,\"y\":84,\"pixelRatio\":1},\"cinema-11\":{\"width\":17,\"height\":17,\"x\":185,\"y\":84,\"pixelRatio\":1},\"circle-11\":{\"width\":17,\"height\":17,\"x\":202,\"y\":84,\"pixelRatio\":1},\"circle-stroked-11\":{\"width\":17,\"height\":17,\"x\":219,\"y\":84,\"pixelRatio\":1},\"clothing-store-11\":{\"width\":17,\"height\":17,\"x\":236,\"y\":84,\"pixelRatio\":1},\"college-11\":{\"width\":17,\"height\":17,\"x\":253,\"y\":84,\"pixelRatio\":1},\"dentist-11\":{\"width\":17,\"height\":17,\"x\":270,\"y\":84,\"pixelRatio\":1},\"doctor-11\":{\"width\":17,\"height\":17,\"x\":287,\"y\":84,\"pixelRatio\":1},\"dog-park-11\":{\"width\":17,\"height\":17,\"x\":304,\"y\":84,\"pixelRatio\":1},\"drinking-water-11\":{\"width\":17,\"height\":17,\"x\":168,\"y\":105,\"pixelRatio\":1},\"embassy-11\":{\"width\":17,\"height\":17,\"x\":185,\"y\":105,\"pixelRatio\":1},\"entrance-11\":{\"width\":17,\"height\":17,\"x\":202,\"y\":105,\"pixelRatio\":1},\"fast-food-11\":{\"width\":17,\"height\":17,\"x\":219,\"y\":105,\"pixelRatio\":1},\"ferry-11\":{\"width\":17,\"height\":17,\"x\":236,\"y\":105,\"pixelRatio\":1},\"fire-station-11\":{\"width\":17,\"height\":17,\"x\":253,\"y\":105,\"pixelRatio\":1},\"fuel-11\":{\"width\":17,\"height\":17,\"x\":270,\"y\":105,\"pixelRatio\":1},\"garden-11\":{\"width\":17,\"height\":17,\"x\":287,\"y\":105,\"pixelRatio\":1},\"golf-11\":{\"width\":17,\"height\":17,\"x\":304,\"y\":105,\"pixelRatio\":1},\"grocery-11\":{\"width\":17,\"height\":17,\"x\":168,\"y\":126,\"pixelRatio\":1},\"harbor-11\":{\"width\":17,\"height\":17,\"x\":185,\"y\":126,\"pixelRatio\":1},\"heliport-11\":{\"width\":17,\"height\":17,\"x\":202,\"y\":126,\"pixelRatio\":1},\"hospital-11\":{\"width\":17,\"height\":17,\"x\":219,\"y\":126,\"pixelRatio\":1},\"ice-cream-11\":{\"width\":17,\"height\":17,\"x\":236,\"y\":126,\"pixelRatio\":1},\"information-11\":{\"width\":17,\"height\":17,\"x\":253,\"y\":126,\"pixelRatio\":1},\"laundry-11\":{\"width\":17,\"height\":17,\"x\":270,\"y\":126,\"pixelRatio\":1},\"library-11\":{\"width\":17,\"height\":17,\"x\":287,\"y\":126,\"pixelRatio\":1},\"lodging-11\":{\"width\":17,\"height\":17,\"x\":304,\"y\":126,\"pixelRatio\":1},\"marker-11\":{\"width\":17,\"height\":17,\"x\":168,\"y\":147,\"pixelRatio\":1},\"monument-11\":{\"width\":17,\"height\":17,\"x\":185,\"y\":147,\"pixelRatio\":1},\"mountain-11\":{\"width\":17,\"height\":17,\"x\":202,\"y\":147,\"pixelRatio\":1},\"museum-11\":{\"width\":17,\"height\":17,\"x\":219,\"y\":147,\"pixelRatio\":1},\"music-11\":{\"width\":17,\"height\":17,\"x\":236,\"y\":147,\"pixelRatio\":1},\"park-11\":{\"width\":17,\"height\":17,\"x\":253,\"y\":147,\"pixelRatio\":1},\"pharmacy-11\":{\"width\":17,\"height\":17,\"x\":270,\"y\":147,\"pixelRatio\":1},\"picnic-site-11\":{\"width\":17,\"height\":17,\"x\":287,\"y\":147,\"pixelRatio\":1},\"place-of-worship-11\":{\"width\":17,\"height\":17,\"x\":304,\"y\":147,\"pixelRatio\":1},\"playground-11\":{\"width\":17,\"height\":17,\"x\":0,\"y\":168,\"pixelRatio\":1},\"police-11\":{\"width\":17,\"height\":17,\"x\":17,\"y\":168,\"pixelRatio\":1},\"post-11\":{\"width\":17,\"height\":17,\"x\":34,\"y\":168,\"pixelRatio\":1},\"prison-11\":{\"width\":17,\"height\":17,\"x\":51,\"y\":168,\"pixelRatio\":1},\"rail-11\":{\"width\":17,\"height\":17,\"x\":68,\"y\":168,\"pixelRatio\":1},\"rail-light-11\":{\"width\":17,\"height\":17,\"x\":85,\"y\":168,\"pixelRatio\":1},\"rail-metro-11\":{\"width\":17,\"height\":17,\"x\":102,\"y\":168,\"pixelRatio\":1},\"religious-christian-11\":{\"width\":17,\"height\":17,\"x\":119,\"y\":168,\"pixelRatio\":1},\"religious-jewish-11\":{\"width\":17,\"height\":17,\"x\":136,\"y\":168,\"pixelRatio\":1},\"religious-muslim-11\":{\"width\":17,\"height\":17,\"x\":153,\"y\":168,\"pixelRatio\":1},\"restaurant-11\":{\"width\":17,\"height\":17,\"x\":170,\"y\":168,\"pixelRatio\":1},\"rocket-11\":{\"width\":17,\"height\":17,\"x\":187,\"y\":168,\"pixelRatio\":1},\"school-11\":{\"width\":17,\"height\":17,\"x\":204,\"y\":168,\"pixelRatio\":1},\"shop-11\":{\"width\":17,\"height\":17,\"x\":221,\"y\":168,\"pixelRatio\":1},\"stadium-11\":{\"width\":17,\"height\":17,\"x\":238,\"y\":168,\"pixelRatio\":1},\"star-11\":{\"width\":17,\"height\":17,\"x\":255,\"y\":168,\"pixelRatio\":1},\"suitcase-11\":{\"width\":17,\"height\":17,\"x\":272,\"y\":168,\"pixelRatio\":1},\"swimming-11\":{\"width\":17,\"height\":17,\"x\":289,\"y\":168,\"pixelRatio\":1},\"theatre-11\":{\"width\":17,\"height\":17,\"x\":306,\"y\":168,\"pixelRatio\":1},\"toilet-11\":{\"width\":17,\"height\":17,\"x\":0,\"y\":185,\"pixelRatio\":1},\"town-hall-11\":{\"width\":17,\"height\":17,\"x\":17,\"y\":185,\"pixelRatio\":1},\"triangle-11\":{\"width\":17,\"height\":17,\"x\":34,\"y\":185,\"pixelRatio\":1},\"triangle-stroked-11\":{\"width\":17,\"height\":17,\"x\":51,\"y\":185,\"pixelRatio\":1},\"veterinary-11\":{\"width\":17,\"height\":17,\"x\":68,\"y\":185,\"pixelRatio\":1},\"volcano-11\":{\"width\":17,\"height\":17,\"x\":85,\"y\":185,\"pixelRatio\":1},\"zoo-11\":{\"width\":17,\"height\":17,\"x\":102,\"y\":185,\"pixelRatio\":1},\"dot-11\":{\"width\":11,\"height\":11,\"x\":323,\"y\":168,\"pixelRatio\":1},\"dot-10\":{\"width\":10,\"height\":10,\"x\":119,\"y\":185,\"pixelRatio\":1}}\r\n\r\nConst.PK = \"pk.eyJ1IjoiaHVhbmd5aXhpdSIsImEiOiI2WjVWR1hFIn0.1P90Q-tkbHS38BvnrhTI6w\";\r\n",
    "static": true,
    "longname": "D:/projects/mapbox-plugins/src/const.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 105,
    "kind": "class",
    "name": "Const",
    "memberof": "src/const.js",
    "static": true,
    "longname": "src/const.js~Const",
    "access": "public",
    "export": true,
    "importPath": "mapbox-plugins/src/const.js",
    "importStyle": "Const",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 106,
    "kind": "file",
    "name": "src/controller.js",
    "content": "import Drone from './drone';\r\nimport { deprecate } from 'core-decorators';\r\nimport { CanvasOverlayer} from './layers/canvasOverlay';\r\n\r\nconst interval = 25;\r\nexport default class controllers {\r\n    /**\r\n     * GameController bind with a drone instance.. \r\n     * After start this controller, use WSAD to move drone.\r\n     */\r\n    static gameControl(drone) {\r\n        if ((drone instanceof Drone) !== true ) {\r\n            console.error(\"gameControl must bind with a drone instance.\");\r\n            return;\r\n        }\r\n        // bind key event with drone..\r\n        drone.u=drone.r=drone.d=drone.l=0;onkeydown=(e)=>t(e,1);onkeyup=(e)=>t(e);\r\n        let t=(e,v,l,i)=>{\r\n            for(i in l={u:[38,90,87],r:[39,68],d:[40,83],l:[37,65,81]})\r\n            if(l[i].includes(e.keyCode))\r\n            drone[i]=v\r\n        }\r\n        setInterval(()=>{\r\n            if (drone.u) drone.accelerate();\r\n            if (drone.d) drone.brake();\r\n            if (drone.r) drone.turnRight();\r\n            if (drone.l) drone.turnLeft();\r\n        }, interval);\r\n        console.log(\"gameControl register success.\");\r\n    }\r\n\r\n    /**\r\n     * pickupObj control, need to bind with canvasOverlay, to fetch the objs drawn\r\n     * each moveEnd, rebuild the pixList depend on objs in viewport!\r\n     * pixList's index is vital for pickUp performance.\r\n     */\r\n    static pickupControl(canvasOverlay) {\r\n        if (canvasOverlay instanceof CanvasOverlayer) {\r\n            // establish pixList storing objs' location. canvasOverlay.source.lon, lat\r\n            let pix = canvasOverlay.lnglat2pix(canvasOverlay.source[0].lon,\r\n                canvasOverlay.source[1].lat);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Calculate bullets location based on drones.\r\n     */\r\n    static bulletCalculator(drones) {\r\n        if (Array.isArray(drones)) {\r\n            for(let i = 0;i < drones.length; i ++) {\r\n                let curDrone = drone[i];\r\n                let curBullets = curDrone.bullets;\r\n                // Calculate bullets coords\r\n                if (curDrone.firing && curBullets) {\r\n\r\n                } else {\r\n                    \r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    \r\n    /**\r\n     * Add AI robots shooting at player..\r\n     * @input num: number. how many robots to create. \r\n     */\r\n    static addRobots(num) {\r\n        let robot = new Drone({});\r\n        return robot;\r\n    }\r\n\r\n\r\n    /**\r\n     * Dashboard bind with a drone instance and div element... \r\n     * After start this controller, use WSAD to move drone.\r\n     */\r\n    // @deprecate\r\n    static dashBoard(drone, ele) {\r\n        if ((drone instanceof Drone) !== true ) {\r\n            console.error(\"dashBoard must bind with a drone instance.\");\r\n            return;\r\n        }\r\n        try {\r\n            setInterval( function(){\r\n                ele.innerHTML = drone.name + \"<br> coords: \" +\r\n                     drone.lon.toFixed(1) + \", \" +\r\n\t\t             drone.lat.toFixed(1) + \"<br>\" +\r\n                     'speed: ' + drone.speed + \"<br>\" +\r\n                     'direction: ' + (drone.direction%(360)).toFixed(1)\r\n            }, 200);\r\n\r\n        } catch(e) {\r\n            console.error(e);\r\n        }        \r\n        console.log(\"dashBoard register success.\");\r\n    }\r\n\r\n    /** create refreshable features list.  */\r\n    static featureList(containerId) {\r\n        if (containerId == undefined || typeof containerId !== \"string\") {\r\n            console.warn(\"invalid containerId..\");\r\n            return null;\r\n        }\r\n        // var miniRefresh = new MiniRefresh({\r\n        //     container: '#' + containerId,\r\n        //     down: {\r\n        //         callback: function() {\r\n        //             // 下拉事件\r\n        //             console.log(\"list dragged ..\");\r\n        //         }\r\n        //     },\r\n        //     up: {\r\n\r\n        //         callback: function() {\r\n        //             // 上拉事件\r\n        //         }\r\n        //     }\r\n        // });\r\n        // return miniRefresh;\r\n    }\r\n}\r\n",
    "static": true,
    "longname": "D:/projects/mapbox-plugins/src/controller.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 107,
    "kind": "variable",
    "name": "interval",
    "memberof": "src/controller.js",
    "static": true,
    "longname": "src/controller.js~interval",
    "access": "public",
    "export": false,
    "importPath": "mapbox-plugins/src/controller.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 108,
    "kind": "class",
    "name": "controllers",
    "memberof": "src/controller.js",
    "static": true,
    "longname": "src/controller.js~controllers",
    "access": "public",
    "export": true,
    "importPath": "mapbox-plugins/src/controller.js",
    "importStyle": "controllers",
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 109,
    "kind": "method",
    "name": "gameControl",
    "memberof": "src/controller.js~controllers",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/controller.js~controllers.gameControl",
    "access": "public",
    "description": "GameController bind with a drone instance.. \nAfter start this controller, use WSAD to move drone.",
    "lineNumber": 11,
    "params": [
      {
        "name": "drone",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 110,
    "kind": "method",
    "name": "pickupControl",
    "memberof": "src/controller.js~controllers",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/controller.js~controllers.pickupControl",
    "access": "public",
    "description": "pickupObj control, need to bind with canvasOverlay, to fetch the objs drawn\neach moveEnd, rebuild the pixList depend on objs in viewport!\npixList's index is vital for pickUp performance.",
    "lineNumber": 37,
    "params": [
      {
        "name": "canvasOverlay",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 111,
    "kind": "method",
    "name": "bulletCalculator",
    "memberof": "src/controller.js~controllers",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/controller.js~controllers.bulletCalculator",
    "access": "public",
    "description": "Calculate bullets location based on drones.",
    "lineNumber": 48,
    "params": [
      {
        "name": "drones",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 112,
    "kind": "method",
    "name": "addRobots",
    "memberof": "src/controller.js~controllers",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/controller.js~controllers.addRobots",
    "access": "public",
    "description": "Add AI robots shooting at player..",
    "lineNumber": 68,
    "unknown": [
      {
        "tagName": "@input",
        "tagValue": "num: number. how many robots to create. "
      }
    ],
    "params": [
      {
        "name": "num",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 113,
    "kind": "method",
    "name": "dashBoard",
    "memberof": "src/controller.js~controllers",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/controller.js~controllers.dashBoard",
    "access": "public",
    "description": "Dashboard bind with a drone instance and div element... \nAfter start this controller, use WSAD to move drone.",
    "lineNumber": 79,
    "params": [
      {
        "name": "drone",
        "types": [
          "*"
        ]
      },
      {
        "name": "ele",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 114,
    "kind": "method",
    "name": "featureList",
    "memberof": "src/controller.js~controllers",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/controller.js~controllers.featureList",
    "access": "public",
    "description": "create refreshable features list.",
    "lineNumber": 100,
    "params": [
      {
        "name": "containerId",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 115,
    "kind": "file",
    "name": "src/drone.js",
    "content": "\r\nimport Const from './const';\r\nimport Bullet from './bullet';\r\nimport { readonly, log } from './util';\r\nimport { Sprite, randomName} from './sprites/sprite';\r\n\r\n// // Drone model script\r\n// const firingTime = 1200, MAXSPEED = 3.900;\r\n\r\n/**\r\n * Drone class with control method.\r\n */\r\nexport default class Drone extends Sprite {\r\n    constructor(opts) {\r\n        super(opts);\r\n        this.life = Const.DroneParam.LIFE;\r\n        this.bullets = [];\r\n        this.firing = false;\r\n        this.bulletNum = 2;\r\n        this.icon = Const.Images.Plane;\r\n        this.manual = false;\r\n    }\r\n\r\n    /**\r\n     * maintask start interval to update its status.\r\n     */\r\n    updateStatus () {\r\n        // make sure Sprite in world..\r\n        let alY = Math.cos(this.direction*Math.PI/180) * this.speed * 0.001,\r\n            lat = this.lat + alY;\r\n        if (lat > 84 || lat < -84) {\r\n            alY = -alY;\r\n            this.direction += 180;\r\n            console.warn(\"latitude out of bbox, turn back..\");\r\n        }\r\n        this.lon += Math.sin(this.direction*Math.PI/180) * this.speed * 0.001;\r\n        this.lat += alY;\r\n        // updateStatusView. toDO in maintask.js\r\n    }\r\n\r\n    accelerate() {\r\n        if (this.speed < Const.DroneParam.MAXSPEED) {\r\n            this.speed += 1;\r\n            // this.updateStatus();\r\n        }\r\n    }\r\n\r\n    fire () {\r\n        \r\n        if (this.bullets instanceof Array && \r\n                this.bullets.length > 0 && !this.firing) {\r\n            let that = this;\r\n            setTimeout(() => {\r\n                that.firing = false;\r\n                // clearInterval(that.interval);\r\n            }, Const.DroneParam.FIRINGTIME)\r\n            this.firing = true;\r\n        } else if (!this.firing) {\r\n            for (let i = 0; i < this.bulletNum; i++) {\r\n                this.bullets.push(new Bullet(this));\r\n            }\r\n            // create Closure to handle the firing status change..\r\n            let that = this;\r\n            setTimeout(() => {\r\n                that.firing = false;\r\n                // clearInterval(that.interval);\r\n            }, Const.DroneParam.FIRINGTIME)\r\n            this.firing = true;\r\n        } else {\r\n            // this firing.. do nothing.\r\n        }\r\n    }\r\n}\r\n",
    "static": true,
    "longname": "D:/projects/mapbox-plugins/src/drone.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 116,
    "kind": "class",
    "name": "Drone",
    "memberof": "src/drone.js",
    "static": true,
    "longname": "src/drone.js~Drone",
    "access": "public",
    "export": true,
    "importPath": "mapbox-plugins/src/drone.js",
    "importStyle": "Drone",
    "description": "Drone class with control method.",
    "lineNumber": 13,
    "interface": false,
    "extends": [
      "src/sprites/sprite.js~Sprite"
    ]
  },
  {
    "__docId__": 117,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/drone.js~Drone",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/drone.js~Drone#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 14,
    "undocument": true
  },
  {
    "__docId__": 118,
    "kind": "member",
    "name": "life",
    "memberof": "src/drone.js~Drone",
    "static": false,
    "longname": "src/drone.js~Drone#life",
    "access": "public",
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 119,
    "kind": "member",
    "name": "bullets",
    "memberof": "src/drone.js~Drone",
    "static": false,
    "longname": "src/drone.js~Drone#bullets",
    "access": "public",
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "type": {
      "types": [
        "*[]"
      ]
    }
  },
  {
    "__docId__": 120,
    "kind": "member",
    "name": "firing",
    "memberof": "src/drone.js~Drone",
    "static": false,
    "longname": "src/drone.js~Drone#firing",
    "access": "public",
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 121,
    "kind": "member",
    "name": "bulletNum",
    "memberof": "src/drone.js~Drone",
    "static": false,
    "longname": "src/drone.js~Drone#bulletNum",
    "access": "public",
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 122,
    "kind": "member",
    "name": "icon",
    "memberof": "src/drone.js~Drone",
    "static": false,
    "longname": "src/drone.js~Drone#icon",
    "access": "public",
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 123,
    "kind": "member",
    "name": "manual",
    "memberof": "src/drone.js~Drone",
    "static": false,
    "longname": "src/drone.js~Drone#manual",
    "access": "public",
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 124,
    "kind": "method",
    "name": "updateStatus",
    "memberof": "src/drone.js~Drone",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/drone.js~Drone#updateStatus",
    "access": "public",
    "description": "maintask start interval to update its status.",
    "lineNumber": 27,
    "params": [],
    "return": null
  },
  {
    "__docId__": 125,
    "kind": "member",
    "name": "direction",
    "memberof": "src/drone.js~Drone",
    "static": false,
    "longname": "src/drone.js~Drone#direction",
    "access": "public",
    "description": null,
    "lineNumber": 33,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 126,
    "kind": "member",
    "name": "lon",
    "memberof": "src/drone.js~Drone",
    "static": false,
    "longname": "src/drone.js~Drone#lon",
    "access": "public",
    "description": null,
    "lineNumber": 36,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 127,
    "kind": "member",
    "name": "lat",
    "memberof": "src/drone.js~Drone",
    "static": false,
    "longname": "src/drone.js~Drone#lat",
    "access": "public",
    "description": null,
    "lineNumber": 37,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 128,
    "kind": "method",
    "name": "accelerate",
    "memberof": "src/drone.js~Drone",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/drone.js~Drone#accelerate",
    "access": "public",
    "description": null,
    "lineNumber": 41,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 129,
    "kind": "member",
    "name": "speed",
    "memberof": "src/drone.js~Drone",
    "static": false,
    "longname": "src/drone.js~Drone#speed",
    "access": "public",
    "description": null,
    "lineNumber": 43,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 130,
    "kind": "method",
    "name": "fire",
    "memberof": "src/drone.js~Drone",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/drone.js~Drone#fire",
    "access": "public",
    "description": null,
    "lineNumber": 48,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 133,
    "kind": "file",
    "name": "src/index.js",
    "content": "// this is Root Module for Whole app, require lib we need.\r\nimport Drone from './drone';\r\nimport Canvas from \"./chart/canvas\";\r\nimport Chart from \"./chart/chartmodel\";\r\nimport Util from \"./util\";\r\nimport Controllers from \"./controller\";\r\n\r\nimport { myTween, sleep} from \"./tween/Tween\";\r\nimport { CanvasOverlayer } from './layers/canvasOverlay';\r\nimport { DomOverlayer } from './layers/domOverlay';\r\nimport { WindLayer } from './layers/windLayer';\r\nimport * as Config from './config';\r\nvar rbush = require('rbush');\r\n\r\n// var HexgridHeatmap = require('./layers/hexgridHeatLayer');\r\nif(typeof mapboxgl != 'undefined')\r\n    mapboxgl.accessToken = Config.default.tk;\r\n// Static Props..\r\nexport {\r\n    Drone, Canvas, Chart, Util, Controllers, myTween, \r\n    CanvasOverlayer, DomOverlayer, WindLayer, rbush, Config\r\n}\r\n",
    "static": true,
    "longname": "D:/projects/mapbox-plugins/src/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 134,
    "kind": "variable",
    "name": "rbush",
    "memberof": "src/index.js",
    "static": true,
    "longname": "src/index.js~rbush",
    "access": "public",
    "export": true,
    "importPath": "mapbox-plugins/src/index.js",
    "importStyle": "{rbush}",
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 135,
    "kind": "file",
    "name": "src/layers/canvasOverlay.js",
    "content": "import Overlayer from './overlay';\r\n\r\n/**\r\n * initCanvasOverlayer based on mapboxgl-canvas\r\n */\r\nexport class CanvasOverlayer extends Overlayer {\r\n    constructor(opts) {\r\n        let _opts = opts || {};\r\n        super(_opts);\r\n        this.canvas = this._init();\r\n        this.redraw = _redraw.bind(this);\r\n        // how to deconstruct opts to this if we need defaultValue.\r\n        this.labelOn = _opts.labelOn || false;\r\n        this.xfield = _opts.xfield || 'lon';\r\n        this.yfield = _opts.yfield || 'lat';\r\n        this.shadow = _opts.shadow != undefined? _opts.shadow : false;\r\n        this.lineColor = _opts.lineColor;\r\n        this.blurWidth = _opts.blurWidth != undefined? _opts.blurWidth: 4;\r\n        this.keepTrack = _opts.keepTrack != undefined? _opts.keepTrack : false;\r\n        if (this.keepTrack) {\r\n            // create trackLayer to render history track lines..\r\n            this.trackLayer = this._init();\r\n            this._initTrackCtx();\r\n        }\r\n        this.tracks  = [];\r\n        this.initTrackCtx = this._initTrackCtx.bind(this);\r\n        if (_opts && _opts.map) {\r\n            this.setMap(_opts.map);\r\n            // 绑定每次move 都重绘doms..\r\n            _opts.map.on(\"move\", () => {\r\n                this.redrawTrack();\r\n            });\r\n        }\r\n    }\r\n\r\n    _init(shadow=false,keepTrack=false) {\r\n        let canvasContainer = this.map._canvasContainer,\r\n            mapboxCanvas = this.map._canvas,\r\n            canvasOverlay = document.createElement(\"canvas\");\r\n        canvasOverlay.style.position = \"absolute\";\r\n        canvasOverlay.className = \"overlay-canvas\";\r\n        canvasOverlay.width = parseInt(mapboxCanvas.style.width);\r\n        canvasOverlay.height = parseInt(mapboxCanvas.style.height);\r\n        canvasContainer.appendChild(canvasOverlay);\r\n        return canvasOverlay;\r\n    }\r\n\r\n    /**\r\n     * init track ctx for each track segment rendering..\r\n     */\r\n    _initTrackCtx() {\r\n        if(this.trackLayer) {\r\n            this.trackCtx = this.trackLayer.getContext(\"2d\");\r\n            this.movedTo = false;\r\n            initCtx(this.trackCtx, this.blurWidth,\"rgba(255,255,255,.4\");\r\n            this.trackCtx.lineWidth = this.lineWidth || 3;\r\n            this.trackCtx.strokeStyle = this.lineColor || \"rgba(255,255,20,.6)\";\r\n            this.trackCtx.beginPath();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * set tracks coordinates of overlayer.\r\n     * @param {*array of track points.} tracks \r\n     */\r\n    setTracks(tracks) {\r\n        if (Array.isArray(tracks)) {\r\n            this.tracks = tracks;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    getTracks() {\r\n        return this.tracks;\r\n    }\r\n\r\n    /**\r\n     * render cached tracks to line when map moved..\r\n     */\r\n    redrawTrack() {\r\n        if(this.trackCtx && this.tracks && this.tracks.length > 0) {\r\n            let pix = [0, 0];\r\n            this.trackCtx.clearRect(0,0,this.trackLayer.width, this.trackLayer.height);\r\n            this.trackCtx.beginPath();\r\n            pix = this.lnglat2pix(this.tracks[0][0], this.tracks[0][1]);\r\n            this.trackCtx.moveTo(pix[0], pix[1]);\r\n            for(let i = 1; i < this.tracks.length; i ++) {\r\n                pix = this.lnglat2pix(this.tracks[i][0], this.tracks[i][1]);\r\n                this.trackCtx.lineTo(pix[0], pix[1]);\r\n            }\r\n            this.trackCtx.stroke();\r\n        }\r\n    }\r\n}\r\n\r\nfunction _preSetCtx(context) {\r\n//默认值为source-over\r\n    let prev = context.globalCompositeOperation;\r\n    //只显示canvas上原图像的重叠部分 source-in, source, destination-in\r\n    context.globalCompositeOperation = 'destination-in';\r\n    //设置主canvas的绘制透明度\r\n    context.globalAlpha = 0.95;\r\n    //这一步目的是将canvas上的图像变的透明\r\n    // context.fillStyle = \"rgba(0,0,0,.95)\";\r\n    context.fillRect(0, 0, context.canvas.width, context.canvas.height);\r\n    //在原图像上重叠新图像\r\n    context.globalCompositeOperation = prev;\r\n}\r\n\r\nconst iconSize = 32; \r\n/**\r\n * expoid this method, can be overwritten\r\n * for special render requirements..\r\n * Important ! redraw may use this.map as projector!\r\n * @param: keepLog, keep render Sprites location log.. \r\n */\r\nfunction _redraw(objs) {\r\n    if (this.canvas) {\r\n        let ctx = this.canvas.getContext(\"2d\");\r\n        // ctx.clearRect(0,0,canv.width, canv.height);\r\n        if (this.shadow) {\r\n            _preSetCtx(ctx);\r\n            ctx.save();\r\n        } else {\r\n            ctx.clearRect(0,0,this.canvas.width,this.canvas.height);\r\n        }\r\n        initCtx(ctx,this.blurWidth,\"rgba(255,255,255,.4\");        \r\n        for(let i=0;i<objs.length;i++) {\r\n            let x = objs[i][this.xfield], y = objs[i][this.yfield], \r\n                radius = objs[i]['radius'] || 3, icon = objs[i]['icon'],\r\n                label = objs[i]['name'], rotate = objs[i]['direction'] || 0;\r\n            radius = Math.abs(radius);\r\n            let pix = this.lnglat2pix(x, y);\r\n            if (pix == null) continue;\r\n            ctx.fillStyle = objs[i]['color'] || 'rgba(255,240,4,.9)';\r\n            ctx.beginPath();\r\n            if (label !== undefined && label.startsWith(\"Play\")) radius = iconSize*0.75;\r\n            // icon: ImageUrl/CanvasFunction..., clip part of img sometimes...\r\n            if (icon !== undefined) {\r\n                ctx.save();\r\n                ctx.translate(pix[0], pix[1]);\r\n                ctx.rotate(rotate*Math.PI/180);\r\n                let min = icon.height > icon.width ? icon.width : icon.height;\r\n                try {\r\n                    ctx.drawImage(icon,0,0,min,min, -iconSize/2, -iconSize/2, iconSize, iconSize);\r\n                } \r\n                catch (e) {\r\n                    console.warn(\"ctx.drawImage.. error.\");\r\n                }\r\n                ctx.restore();\r\n            } else {\r\n                ctx.arc(pix[0], pix[1], radius, 0, Math.PI*2);\r\n                ctx.fill();\r\n            }\r\n            if (this.keepTrack && this.tracks.length == 0) {\r\n                this.initTrackCtx();\r\n                this.trackCtx.moveTo(pix[0],pix[1]);\r\n                this.tracks.push([x, y]);\r\n                // this.movedTo = true;\r\n            } else if (this.trackCtx) {\r\n                this.trackCtx.lineTo(pix[0],pix[1]);\r\n                this.tracks.push([x, y]);\r\n                setTimeout(()=>{\r\n                    //// closePath would auto-complete the path to polygon..\r\n                    this.trackCtx.stroke();\r\n                    this.trackCtx.beginPath();\r\n                    this.trackCtx.moveTo(pix[0],pix[1]);\r\n                }, 0);\r\n            }\r\n            if (label !== undefined && this.labelOn) {\r\n                ctx.strokeText(label, pix[0], pix[1]);\r\n            }\r\n            // ctx.closePath();\r\n        }\r\n        if(this.shadow) {\r\n            ctx.restore();\r\n        }\r\n    }\r\n}\r\n\r\nfunction initCtx(ctx, blurWidth, shadowColor=\"rgba(255,255,255,.8)\") {\r\n    if (ctx === undefined) return;\r\n    ctx.linecap = 'round';\r\n    ctx.shadowBlur = blurWidth;\r\n    ctx.shadowColor = shadowColor;\r\n    ctx.strokeStyle = \"rgba(255,255,255,.9)\";\r\n    ctx.fillStyle = \"rgba(255,240,91,.8)\";\r\n}\r\n\r\n/**\r\n * draw tri on canvas by center and rotation..\r\n * @param rotate: degree number,\r\n * @param radius: number, tri radius..\r\n *      /\\  default beta angle is 30 degree.\r\n *     /  \\\r\n *    /____\\ \r\n * draw triangle \r\n */\r\nfunction drawTri(ctx, coord, rotate, radius=iconSize/2, beta=30) {\r\n    // calc the head point of triangle.\r\n    let headPoint = [undefined, undefined], tailPoint = [undefined, undefined],\r\n        rad = rotate*Math.PI/180;\r\n    headPoint[0] = coord[0] + Math.cos(rad)*radius;\r\n    headPoint[1] = coord[1] + Math.sin(rad)*radius;\r\n    tailPoint[0] = coord[0] - Math.cos(rad)*radius;\r\n    tailPoint[1] = coord[1] - Math.sin(rad)*radius;\r\n    let rot = (rotate - beta/2),\r\n        rPoint = [undefined, undefined];\r\n    rPoint[0] = Math.cos(rot*Math.PI/180);\r\n\r\n    ctx.lineTo(headPoint);\r\n}\r\n",
    "static": true,
    "longname": "D:/projects/mapbox-plugins/src/layers/canvasOverlay.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 136,
    "kind": "class",
    "name": "CanvasOverlayer",
    "memberof": "src/layers/canvasOverlay.js",
    "static": true,
    "longname": "src/layers/canvasOverlay.js~CanvasOverlayer",
    "access": "public",
    "export": true,
    "importPath": "mapbox-plugins/src/layers/canvasOverlay.js",
    "importStyle": "{CanvasOverlayer}",
    "description": "initCanvasOverlayer based on mapboxgl-canvas",
    "lineNumber": 6,
    "interface": false,
    "extends": [
      "src/layers/overlay.js~Overlayer"
    ]
  },
  {
    "__docId__": 137,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/layers/canvasOverlay.js~CanvasOverlayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/layers/canvasOverlay.js~CanvasOverlayer#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 7,
    "undocument": true
  },
  {
    "__docId__": 138,
    "kind": "member",
    "name": "canvas",
    "memberof": "src/layers/canvasOverlay.js~CanvasOverlayer",
    "static": false,
    "longname": "src/layers/canvasOverlay.js~CanvasOverlayer#canvas",
    "access": "public",
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 139,
    "kind": "member",
    "name": "redraw",
    "memberof": "src/layers/canvasOverlay.js~CanvasOverlayer",
    "static": false,
    "longname": "src/layers/canvasOverlay.js~CanvasOverlayer#redraw",
    "access": "public",
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 140,
    "kind": "member",
    "name": "labelOn",
    "memberof": "src/layers/canvasOverlay.js~CanvasOverlayer",
    "static": false,
    "longname": "src/layers/canvasOverlay.js~CanvasOverlayer#labelOn",
    "access": "public",
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 141,
    "kind": "member",
    "name": "xfield",
    "memberof": "src/layers/canvasOverlay.js~CanvasOverlayer",
    "static": false,
    "longname": "src/layers/canvasOverlay.js~CanvasOverlayer#xfield",
    "access": "public",
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 142,
    "kind": "member",
    "name": "yfield",
    "memberof": "src/layers/canvasOverlay.js~CanvasOverlayer",
    "static": false,
    "longname": "src/layers/canvasOverlay.js~CanvasOverlayer#yfield",
    "access": "public",
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 143,
    "kind": "member",
    "name": "shadow",
    "memberof": "src/layers/canvasOverlay.js~CanvasOverlayer",
    "static": false,
    "longname": "src/layers/canvasOverlay.js~CanvasOverlayer#shadow",
    "access": "public",
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 144,
    "kind": "member",
    "name": "lineColor",
    "memberof": "src/layers/canvasOverlay.js~CanvasOverlayer",
    "static": false,
    "longname": "src/layers/canvasOverlay.js~CanvasOverlayer#lineColor",
    "access": "public",
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 145,
    "kind": "member",
    "name": "blurWidth",
    "memberof": "src/layers/canvasOverlay.js~CanvasOverlayer",
    "static": false,
    "longname": "src/layers/canvasOverlay.js~CanvasOverlayer#blurWidth",
    "access": "public",
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 146,
    "kind": "member",
    "name": "keepTrack",
    "memberof": "src/layers/canvasOverlay.js~CanvasOverlayer",
    "static": false,
    "longname": "src/layers/canvasOverlay.js~CanvasOverlayer#keepTrack",
    "access": "public",
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 147,
    "kind": "member",
    "name": "trackLayer",
    "memberof": "src/layers/canvasOverlay.js~CanvasOverlayer",
    "static": false,
    "longname": "src/layers/canvasOverlay.js~CanvasOverlayer#trackLayer",
    "access": "public",
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 148,
    "kind": "member",
    "name": "tracks",
    "memberof": "src/layers/canvasOverlay.js~CanvasOverlayer",
    "static": false,
    "longname": "src/layers/canvasOverlay.js~CanvasOverlayer#tracks",
    "access": "public",
    "description": null,
    "lineNumber": 25,
    "undocument": true,
    "type": {
      "types": [
        "*[]"
      ]
    }
  },
  {
    "__docId__": 149,
    "kind": "member",
    "name": "initTrackCtx",
    "memberof": "src/layers/canvasOverlay.js~CanvasOverlayer",
    "static": false,
    "longname": "src/layers/canvasOverlay.js~CanvasOverlayer#initTrackCtx",
    "access": "public",
    "description": null,
    "lineNumber": 26,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 150,
    "kind": "method",
    "name": "_init",
    "memberof": "src/layers/canvasOverlay.js~CanvasOverlayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/layers/canvasOverlay.js~CanvasOverlayer#_init",
    "access": "private",
    "description": null,
    "lineNumber": 36,
    "undocument": true,
    "params": [
      {
        "name": "shadow",
        "optional": true,
        "types": [
          "boolean"
        ],
        "defaultRaw": false,
        "defaultValue": "false"
      },
      {
        "name": "keepTrack",
        "optional": true,
        "types": [
          "boolean"
        ],
        "defaultRaw": false,
        "defaultValue": "false"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 151,
    "kind": "method",
    "name": "_initTrackCtx",
    "memberof": "src/layers/canvasOverlay.js~CanvasOverlayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/layers/canvasOverlay.js~CanvasOverlayer#_initTrackCtx",
    "access": "private",
    "description": "init track ctx for each track segment rendering..",
    "lineNumber": 51,
    "params": [],
    "return": null
  },
  {
    "__docId__": 152,
    "kind": "member",
    "name": "trackCtx",
    "memberof": "src/layers/canvasOverlay.js~CanvasOverlayer",
    "static": false,
    "longname": "src/layers/canvasOverlay.js~CanvasOverlayer#trackCtx",
    "access": "public",
    "description": null,
    "lineNumber": 53,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 153,
    "kind": "member",
    "name": "movedTo",
    "memberof": "src/layers/canvasOverlay.js~CanvasOverlayer",
    "static": false,
    "longname": "src/layers/canvasOverlay.js~CanvasOverlayer#movedTo",
    "access": "public",
    "description": null,
    "lineNumber": 54,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 154,
    "kind": "method",
    "name": "setTracks",
    "memberof": "src/layers/canvasOverlay.js~CanvasOverlayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/layers/canvasOverlay.js~CanvasOverlayer#setTracks",
    "access": "public",
    "description": "set tracks coordinates of overlayer.",
    "lineNumber": 66,
    "params": [
      {
        "nullable": null,
        "types": [
          "*array of track points."
        ],
        "spread": false,
        "optional": false,
        "name": "tracks",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 156,
    "kind": "method",
    "name": "getTracks",
    "memberof": "src/layers/canvasOverlay.js~CanvasOverlayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/layers/canvasOverlay.js~CanvasOverlayer#getTracks",
    "access": "public",
    "description": null,
    "lineNumber": 73,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 157,
    "kind": "method",
    "name": "redrawTrack",
    "memberof": "src/layers/canvasOverlay.js~CanvasOverlayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/layers/canvasOverlay.js~CanvasOverlayer#redrawTrack",
    "access": "public",
    "description": "render cached tracks to line when map moved..",
    "lineNumber": 80,
    "params": [],
    "return": null
  },
  {
    "__docId__": 158,
    "kind": "function",
    "name": "_preSetCtx",
    "memberof": "src/layers/canvasOverlay.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/layers/canvasOverlay.js~_preSetCtx",
    "access": "private",
    "export": false,
    "importPath": "mapbox-plugins/src/layers/canvasOverlay.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 96,
    "undocument": true,
    "params": [
      {
        "name": "context",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 159,
    "kind": "variable",
    "name": "iconSize",
    "memberof": "src/layers/canvasOverlay.js",
    "static": true,
    "longname": "src/layers/canvasOverlay.js~iconSize",
    "access": "public",
    "export": false,
    "importPath": "mapbox-plugins/src/layers/canvasOverlay.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 110,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 160,
    "kind": "function",
    "name": "_redraw",
    "memberof": "src/layers/canvasOverlay.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/layers/canvasOverlay.js~_redraw",
    "access": "private",
    "export": false,
    "importPath": "mapbox-plugins/src/layers/canvasOverlay.js",
    "importStyle": null,
    "description": "expoid this method, can be overwritten\nfor special render requirements..\nImportant ! redraw may use this.map as projector!\n@param: keepLog, keep render Sprites location log.. ",
    "lineNumber": 117,
    "params": [
      {
        "name": "objs",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 161,
    "kind": "function",
    "name": "initCtx",
    "memberof": "src/layers/canvasOverlay.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/layers/canvasOverlay.js~initCtx",
    "access": "public",
    "export": false,
    "importPath": "mapbox-plugins/src/layers/canvasOverlay.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 181,
    "undocument": true,
    "params": [
      {
        "name": "ctx",
        "types": [
          "*"
        ]
      },
      {
        "name": "blurWidth",
        "types": [
          "*"
        ]
      },
      {
        "name": "shadowColor",
        "optional": true,
        "types": [
          "string"
        ],
        "defaultRaw": "rgba(255,255,255,.8)",
        "defaultValue": "rgba(255,255,255,.8)"
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 162,
    "kind": "function",
    "name": "drawTri",
    "memberof": "src/layers/canvasOverlay.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/layers/canvasOverlay.js~drawTri",
    "access": "public",
    "export": false,
    "importPath": "mapbox-plugins/src/layers/canvasOverlay.js",
    "importStyle": null,
    "description": "draw tri on canvas by center and rotation..",
    "lineNumber": 199,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "rotate:",
        "description": "degree number,"
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "radius:",
        "description": "number, tri radius..\n     /\\  default beta angle is 30 degree.\n    /  \\\n   /____\\ \ndraw triangle"
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 163,
    "kind": "file",
    "name": "src/layers/canvasUtil.js",
    "content": "\r\nfunction drawDashLine(ctx, line) {\r\n    if (ctx instanceof CanvasRenderingContext2D && line instanceof Array) {\r\n        ctx.setLineDash([10, 5]);\r\n        ctx.strokeStyle = 'rgba(0,252,100,0.6)';\r\n        ctx.lineWidth = 6;\r\n        \r\n        ctx.beginPath();\r\n        ctx.moveTo(line[0][0], line[0][1]);\r\n        for (let i = 1; i < line.length; i += 1) {\r\n            ctx.lineTo(line[i][0], line[i][1]);\r\n        }\r\n        ctx.stroke();\r\n        ctx.closePath();\r\n    }\r\n}\r\n\r\nfunction drawGradientLine(ctx, line, shadow = false) {\r\n    if (ctx instanceof CanvasRenderingContext2D && line instanceof Array) {\r\n        // build gradient style\r\n        var gradient = ctx.createLinearGradient(0, 0, 600, 0);\r\n        gradient.addColorStop(0, \"rgba(0,255,100,0.9)\");\r\n        gradient.addColorStop(1, \"rgba(255,255,255,0.1)\");\r\n\r\n        if (shadow) {\r\n            console.warn(`enabling line shadowBlur`);\r\n            ctx.shadowBlur = 4;\r\n            ctx.shadowColor = '#0f0';\r\n        }\r\n\r\n        ctx.strokeStyle = gradient;\r\n        ctx.setLineDash([]);\r\n        ctx.globalAlpha = 0.9;\r\n        ctx.globalCompositeOperation = 'source-over';\r\n\r\n        // ctx.strokeStyle = 'green';\r\n        ctx.lineCap = \"round\";  // square\r\n        ctx.lineJoin = 'round'; // bevel\r\n        ctx.lineWidth = 6;\r\n\r\n        ctx.beginPath();\r\n        ctx.moveTo(line[0][0], line[0][1]);\r\n        for (let i = 1; i < line.length; i += 1) {\r\n            ctx.lineTo(line[i][0], line[i][1]);\r\n        }\r\n        ctx.stroke();\r\n        ctx.closePath();\r\n    }\r\n}\r\n\r\nfunction drawArrowLine(ctx, line, enableAni = false) {\r\n    if (ctx instanceof CanvasRenderingContext2D && line instanceof Array) {\r\n        \r\n            // ctx.fillRect(0, 0, 600, 400);\r\n            setLineStyle(ctx);\r\n\r\n            ctx.beginPath();\r\n            ctx.moveTo(line[0][0], line[0][1]);\r\n            for (let i = 1; i < line.length; i += 1) {\r\n                ctx.lineTo(line[i][0], line[i][1]);\r\n            }\r\n            ctx.stroke();\r\n            ctx.closePath();\r\n\r\n        function drawArrows() {\r\n            let aniOffset = .2;        \r\n            aniOffset = aniOffset < 1 ? aniOffset + .01 : .2;\r\n            for (let i = 1; i < line.length; i += 1) {\r\n                drawArrow(ctx, line[i-1], line[i], aniOffset); // one segment.\r\n            }\r\n            if (enableAni) requestAnimationFrame(drawArrows);\r\n        }\r\n        drawArrows();\r\n    }\r\n}\r\n\r\nfunction setLineStyle(ctx, shadow = false) {\r\n    ctx.strokeStyle = 'green';\r\n    ctx.setLineDash([]);\r\n    ctx.globalAlpha = 0.95;\r\n    ctx.globalCompositeOperation = 'source-over';\r\n    if (shadow) {\r\n        console.warn(`enabling line shadowBlur`);\r\n        ctx.shadowBlur = 4;\r\n        ctx.shadowColor = '#0f0';\r\n    } else {\r\n        ctx.shadowBlur = 0;\r\n    }\r\n\r\n    // ctx.strokeStyle = 'green';\r\n    ctx.lineCap = \"round\";  // square\r\n    ctx.lineJoin = 'round'; // bevel\r\n    ctx.lineWidth = 12;\r\n}\r\n\r\nfunction drawArrow(ctx, startPoint, endPoint, aniOffset) {\r\n    ctx.beginPath();\r\n    ctx.strokeStyle = 'white';\r\n    ctx.lineWidth = 2;\r\n    \r\n    // arrow img: assets/up.png\r\n    var points = generatePoints(startPoint, endPoint, 30, ctx, aniOffset);\r\n    // console.warn(`draw segment arrows done... from ${startPoint.join()} to ${endPoint.join()}`);\r\n    // // calc left/right point.\r\n    // var lrPoints = calcLRPoints(point, rotate);   \r\n\r\n    ctx.closePath();\r\n}\r\n\r\nfunction generatePoints(startP, endP, stepSize = 20, ctx, aniOffset = 0.5) {\r\n    const radA = Math.atan((endP[1] - startP[1]) / (endP[0] - startP[0]));  // k should be transform to a in Rad.\r\n    const dist = calcDist(startP, endP);\r\n    let points = [];\r\n    const steps = dist / stepSize;\r\n\r\n    const drawImg = (pX, pY) => {\r\n        if (img && ctx) {\r\n            ctx.save();\r\n            // ctx.beginPath();\r\n            ctx.translate(pX , pY);  // consider img position and imgWidth/Height.\r\n            const rotateAng = 180 * radA / Math.PI; \r\n            ctx.rotate(radA);\r\n            // ctx.arc(0, 0, 2, 0, 2 * Math.PI);\r\n            ctx.drawImage(img, -img.width / 2,  -img.width/2);\r\n            // ctx.stroke();\r\n            console.warn(`drawIcon at ${pX}, ${pY}, with angle rad: ${radA}`);\r\n            // ctx.closePath();\r\n            ctx.restore();\r\n        }\r\n    }\r\n\r\n    // gen points by stepSize.. if enable corner arrow, start s with (0~1) float number.\r\n    for (let s = aniOffset; s <= steps; s += 1) {\r\n        const pX = startP[0] + s * stepSize * Math.cos(radA);\r\n        const pY = startP[1] + s * stepSize * Math.sin(radA);\r\n        points.push([pX, pY]);\r\n        if (ctx) {\r\n            var img = new Image();\r\n            img.src = '../../assets/arrow.png';\r\n            img.onload = function() {\r\n                drawImg(pX, pY);\r\n            }\r\n        }\r\n    }\r\n    return points;\r\n}\r\n\r\nfunction calcDist(startP, endP) {\r\n    return Math.sqrt((endP[1] - startP[1]) ** 2 + (endP[0] - startP[0]) ** 2);\r\n}\r\n\r\n/**\r\n *      . <-- center coordinate [x, y].\r\n *     / \\\r\n *    `   ` \r\n * \r\n */\r\nfunction calcLRPoints(center, rotate) {\r\n    const arrawRadius = 3;\r\n    return center;\r\n}\r\n\r\nfunction drawGradientRect(ctx, line) {\r\n    \r\n}\r\n",
    "static": true,
    "longname": "D:/projects/mapbox-plugins/src/layers/canvasUtil.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 164,
    "kind": "function",
    "name": "drawDashLine",
    "memberof": "src/layers/canvasUtil.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/layers/canvasUtil.js~drawDashLine",
    "access": "public",
    "export": false,
    "importPath": "mapbox-plugins/src/layers/canvasUtil.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "params": [
      {
        "name": "ctx",
        "types": [
          "*"
        ]
      },
      {
        "name": "line",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 165,
    "kind": "function",
    "name": "drawGradientLine",
    "memberof": "src/layers/canvasUtil.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/layers/canvasUtil.js~drawGradientLine",
    "access": "public",
    "export": false,
    "importPath": "mapbox-plugins/src/layers/canvasUtil.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "params": [
      {
        "name": "ctx",
        "types": [
          "*"
        ]
      },
      {
        "name": "line",
        "types": [
          "*"
        ]
      },
      {
        "name": "shadow",
        "optional": true,
        "types": [
          "boolean"
        ],
        "defaultRaw": false,
        "defaultValue": "false"
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 166,
    "kind": "function",
    "name": "drawArrowLine",
    "memberof": "src/layers/canvasUtil.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/layers/canvasUtil.js~drawArrowLine",
    "access": "public",
    "export": false,
    "importPath": "mapbox-plugins/src/layers/canvasUtil.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 51,
    "undocument": true,
    "params": [
      {
        "name": "ctx",
        "types": [
          "*"
        ]
      },
      {
        "name": "line",
        "types": [
          "*"
        ]
      },
      {
        "name": "enableAni",
        "optional": true,
        "types": [
          "boolean"
        ],
        "defaultRaw": false,
        "defaultValue": "false"
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 167,
    "kind": "function",
    "name": "setLineStyle",
    "memberof": "src/layers/canvasUtil.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/layers/canvasUtil.js~setLineStyle",
    "access": "public",
    "export": false,
    "importPath": "mapbox-plugins/src/layers/canvasUtil.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 77,
    "undocument": true,
    "params": [
      {
        "name": "ctx",
        "types": [
          "*"
        ]
      },
      {
        "name": "shadow",
        "optional": true,
        "types": [
          "boolean"
        ],
        "defaultRaw": false,
        "defaultValue": "false"
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 168,
    "kind": "function",
    "name": "drawArrow",
    "memberof": "src/layers/canvasUtil.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/layers/canvasUtil.js~drawArrow",
    "access": "public",
    "export": false,
    "importPath": "mapbox-plugins/src/layers/canvasUtil.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 96,
    "undocument": true,
    "params": [
      {
        "name": "ctx",
        "types": [
          "*"
        ]
      },
      {
        "name": "startPoint",
        "types": [
          "*"
        ]
      },
      {
        "name": "endPoint",
        "types": [
          "*"
        ]
      },
      {
        "name": "aniOffset",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 169,
    "kind": "function",
    "name": "generatePoints",
    "memberof": "src/layers/canvasUtil.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/layers/canvasUtil.js~generatePoints",
    "access": "public",
    "export": false,
    "importPath": "mapbox-plugins/src/layers/canvasUtil.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 110,
    "undocument": true,
    "params": [
      {
        "name": "startP",
        "types": [
          "*"
        ]
      },
      {
        "name": "endP",
        "types": [
          "*"
        ]
      },
      {
        "name": "stepSize",
        "optional": true,
        "types": [
          "number"
        ],
        "defaultRaw": 20,
        "defaultValue": "20"
      },
      {
        "name": "ctx",
        "types": [
          "*"
        ]
      },
      {
        "name": "aniOffset",
        "optional": true,
        "types": [
          "number"
        ],
        "defaultRaw": 0.5,
        "defaultValue": "0.5"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 170,
    "kind": "function",
    "name": "calcDist",
    "memberof": "src/layers/canvasUtil.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/layers/canvasUtil.js~calcDist",
    "access": "public",
    "export": false,
    "importPath": "mapbox-plugins/src/layers/canvasUtil.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 148,
    "undocument": true,
    "params": [
      {
        "name": "startP",
        "types": [
          "*"
        ]
      },
      {
        "name": "endP",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 171,
    "kind": "function",
    "name": "calcLRPoints",
    "memberof": "src/layers/canvasUtil.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/layers/canvasUtil.js~calcLRPoints",
    "access": "public",
    "export": false,
    "importPath": "mapbox-plugins/src/layers/canvasUtil.js",
    "importStyle": null,
    "description": "     . <-- center coordinate [x, y].\n    / \\\n   `   ` ",
    "lineNumber": 158,
    "params": [
      {
        "name": "center",
        "types": [
          "*"
        ]
      },
      {
        "name": "rotate",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 172,
    "kind": "function",
    "name": "drawGradientRect",
    "memberof": "src/layers/canvasUtil.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/layers/canvasUtil.js~drawGradientRect",
    "access": "public",
    "export": false,
    "importPath": "mapbox-plugins/src/layers/canvasUtil.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 163,
    "undocument": true,
    "params": [
      {
        "name": "ctx",
        "types": [
          "*"
        ]
      },
      {
        "name": "line",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 173,
    "kind": "file",
    "name": "src/layers/domOverlay.js",
    "content": "import Overlayer from './overlay';\r\nimport Util from '../util';\r\n\r\nconst duration = 1200;\r\n\r\n/**\r\n * initDomOverlayer\r\n */\r\nexport class DomOverlayer extends Overlayer {\r\n    constructor(opts) {\r\n        super(opts);\r\n        this.domContainer = this._init();\r\n        this.redraw = _redraw.bind(this);\r\n        this.domOpts = opts.doms;  // store dom config\r\n        if (opts && opts.map) {\r\n            this.setMap(opts.map);\r\n            // bind render doms to each move..performance to be promoted.\r\n            opts.map.on(\"move\", this.redraw);\r\n        }\r\n        this.doms = []; // store dom elements.\r\n        this.lastData = [];\r\n        this.redraw();\r\n        console.log(\"Dom overlayer add to Map...\");\r\n    }\r\n\r\n    _init() {\r\n        let canvasContainer = this.map._canvasContainer,\r\n            mapboxCanvas = this.map._canvas,\r\n            domContainer = document.createElement(\"div\");\r\n        domContainer.style.position = \"absolute\";\r\n        domContainer.className = \"overlay-dom\";\r\n        domContainer.style.width = mapboxCanvas.style.width;\r\n        domContainer.style.height = '0';\r\n        canvasContainer.parentElement.appendChild(domContainer);\r\n        return domContainer;\r\n    }\r\n\r\n    /**\r\n     * updateDoms and redraw..\r\n     */\r\n    setDoms(Doms) {\r\n        if (Array.isArray(Doms)) {\r\n            this.domOpts = Doms;\r\n            this.clearDoms();\r\n            this.redraw();\r\n        }\r\n    }\r\n\r\n    findDom(domId) {\r\n        for(let i = 0;i<this.doms.length;i++) {\r\n            try {\r\n                if (this.doms[i] === domId) {\r\n                    return this.doms[i];\r\n                }\r\n            } catch (error) {\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    clearDoms() {\r\n        for(let i = 0;i<this.doms.length;i++) {\r\n            this.domContainer.removeChild(this.doms[i]);         \r\n        }\r\n        this.doms = [];\r\n    }\r\n}\r\n\r\n\r\nconst lineHeight = 60, dotRadius = 4, chartHeight = 60;\r\n/**\r\n * domOverlay register&render above default canvas..\r\n * keep in absolute geolocation..\r\n */\r\nfunction _redraw() {\r\n    let doms = this.domOpts;\r\n    if (doms && Array.isArray(doms)) {\r\n        // append each of domPopups to domContainer.\r\n        for (let i=0;i<doms.length;i++) {\r\n            let domOpt = doms[i];\r\n            if (typeof domOpt == undefined) continue;\r\n            // let sanity = Util.checkSanity(this.lastDoms[i], domOpt);\r\n            let x = domOpt['lon'], y = domOpt['lat'], \r\n                pix = this.lnglat2pix(x, y);\r\n            if (pix == null) continue;\r\n            let iconName = domOpt['icon'], resources = domOpt['resources'], \r\n                domStyle = domOpt['style']? domOpt['style'] + ' animated': 'bounceIn animated',\r\n                chartData = domOpt['data'], chartType = domOpt['type'];\r\n            // data sanity should be checked, domOpts not changed then just update position!\r\n            let dom = this.doms[i*3] || document.createElement(\"div\"),\r\n                line = this.doms[i*3+1] ||document.createElement(\"div\"),\r\n                dot =this.doms[i*3+2] || document.createElement(\"div\");\r\n            preStyleEles(line, dot, dom, pix, chartType||resources);\r\n\r\n            let dataClone = Util.deepClone(chartData);\r\n            // handle different typesof domOverlay.\r\n            if (resources != undefined) {\r\n                dom.title = (domOpt['content'] || ``);\r\n                if (!dom.hasChildNodes() || dom.firstChild.src !== resources[0]) {\r\n                    Util.setResource(dom, resources);\r\n                }\r\n            } else if (iconName != undefined) {\r\n                dom.innerHTML = (domOpt['content'] || ``) + '</br>';\r\n                Util.setIconDiv(dom, iconName);\r\n            } else if (chartData != undefined && chartType != undefined) {\r\n                if (Util.isChanged(this.lastData[i], chartData)) {\r\n                    // setChart would contaminate input Data.\r\n                    Util.setChart(dom, dataClone, chartType, chartHeight*2);\r\n                    this.lastData[i] = chartData;\r\n                }\r\n            } else {\r\n                dom.innerHTML = (domOpt['content']|| '') + '</br>';\r\n            }\r\n            if (chartType != undefined) styleChartContainer(dom)\r\n\r\n            line.className = \"dom-ele\", dot.className = \"dom-ele\";\r\n            line.style.left = pix[0] + \"px\";\r\n            line.style.top = (pix[1] - (lineHeight - 10)) + \"px\";\r\n            dot.style.left = pix[0] - dotRadius + \"px\";\r\n            dot.style.top = pix[1] - dotRadius + \"px\";\r\n\r\n            // add dom to container at init process.\r\n            if (this.doms[i*3] == undefined) {\r\n                dom.className = `dom-popup ${domStyle}`;\r\n                line.className = dot.className = `dom-ele ${domStyle}`\r\n                console.warn(`add ${domStyle} css to dom.`)\r\n                this.domContainer.appendChild(dom);\r\n                this.domContainer.appendChild(line);\r\n                this.domContainer.appendChild(dot);\r\n                this.doms.push(...[dom, line, dot]);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n *  ___________\r\n * |chart/img  |   main popup. /// It is key topic to place popup align.\r\n *  -----------\r\n *       |         line/triangle.. (should implement by psuedoClass!)\r\n *       。         point..\r\n * chartWidth always 2*chartHeight if using Chart.js\r\n */\r\nfunction preStyleEles(line, dot, dom, pix, chartType) {\r\n    const isImg = Array.isArray(chartType);\r\n    line.style.height = lineHeight - 10 + 'px';\r\n    line.style.width = '1px';\r\n    line.style.position = \"absolute\";\r\n    dot.style.borderRadius = '50%';\r\n    dot.style.width = dot.style.height = dotRadius * 2 + 'px';\r\n    dot.style.position = \"absolute\";\r\n    dom.style.position = \"absolute\";\r\n    if (!chartType) {\r\n        dom.style.minWidth = \"100px\"; // consistant with chart/image dom width/height.\r\n    }\r\n    dom.style.background = \"#fff\";\r\n    dom.style.textAlign = \"center\";\r\n    dom.style.padding = '3px';\r\n    // if has chartType, display chart above vertical line.\r\n    dom.style.left = (pix[0] - (isImg? chartHeight/2: chartHeight)) + \"px\";\r\n    dom.style.top = (pix[1] - lineHeight - (chartType? chartHeight : 20)) + \"px\";\r\n}\r\n\r\nfunction styleChartContainer(dom) {\r\n    dom.style.borderWidth = '0';\r\n    dom.style.zIndex = 9999;\r\n    dom.style.backgroundColor = 'rgba(0,0,0,0.0)';\r\n}\r\n\r\nfunction animLine (line){\r\n    line.className = \"dom-line\";    \r\n}\r\n\r\nconst htmlTemplate = {\r\n\r\n}\r\n",
    "static": true,
    "longname": "D:/projects/mapbox-plugins/src/layers/domOverlay.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 174,
    "kind": "variable",
    "name": "duration",
    "memberof": "src/layers/domOverlay.js",
    "static": true,
    "longname": "src/layers/domOverlay.js~duration",
    "access": "public",
    "export": false,
    "importPath": "mapbox-plugins/src/layers/domOverlay.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 175,
    "kind": "class",
    "name": "DomOverlayer",
    "memberof": "src/layers/domOverlay.js",
    "static": true,
    "longname": "src/layers/domOverlay.js~DomOverlayer",
    "access": "public",
    "export": true,
    "importPath": "mapbox-plugins/src/layers/domOverlay.js",
    "importStyle": "{DomOverlayer}",
    "description": "initDomOverlayer",
    "lineNumber": 9,
    "interface": false,
    "extends": [
      "src/layers/overlay.js~Overlayer"
    ]
  },
  {
    "__docId__": 176,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/layers/domOverlay.js~DomOverlayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/layers/domOverlay.js~DomOverlayer#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 10,
    "undocument": true
  },
  {
    "__docId__": 177,
    "kind": "member",
    "name": "domContainer",
    "memberof": "src/layers/domOverlay.js~DomOverlayer",
    "static": false,
    "longname": "src/layers/domOverlay.js~DomOverlayer#domContainer",
    "access": "public",
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 178,
    "kind": "member",
    "name": "redraw",
    "memberof": "src/layers/domOverlay.js~DomOverlayer",
    "static": false,
    "longname": "src/layers/domOverlay.js~DomOverlayer#redraw",
    "access": "public",
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 179,
    "kind": "member",
    "name": "domOpts",
    "memberof": "src/layers/domOverlay.js~DomOverlayer",
    "static": false,
    "longname": "src/layers/domOverlay.js~DomOverlayer#domOpts",
    "access": "public",
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 180,
    "kind": "member",
    "name": "doms",
    "memberof": "src/layers/domOverlay.js~DomOverlayer",
    "static": false,
    "longname": "src/layers/domOverlay.js~DomOverlayer#doms",
    "access": "public",
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "type": {
      "types": [
        "*[]"
      ]
    }
  },
  {
    "__docId__": 181,
    "kind": "member",
    "name": "lastData",
    "memberof": "src/layers/domOverlay.js~DomOverlayer",
    "static": false,
    "longname": "src/layers/domOverlay.js~DomOverlayer#lastData",
    "access": "public",
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "type": {
      "types": [
        "*[]"
      ]
    }
  },
  {
    "__docId__": 182,
    "kind": "method",
    "name": "_init",
    "memberof": "src/layers/domOverlay.js~DomOverlayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/layers/domOverlay.js~DomOverlayer#_init",
    "access": "private",
    "description": null,
    "lineNumber": 26,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 183,
    "kind": "method",
    "name": "setDoms",
    "memberof": "src/layers/domOverlay.js~DomOverlayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/layers/domOverlay.js~DomOverlayer#setDoms",
    "access": "public",
    "description": "updateDoms and redraw..",
    "lineNumber": 41,
    "params": [
      {
        "name": "Doms",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 185,
    "kind": "method",
    "name": "findDom",
    "memberof": "src/layers/domOverlay.js~DomOverlayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/layers/domOverlay.js~DomOverlayer#findDom",
    "access": "public",
    "description": null,
    "lineNumber": 49,
    "undocument": true,
    "params": [
      {
        "name": "domId",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 186,
    "kind": "method",
    "name": "clearDoms",
    "memberof": "src/layers/domOverlay.js~DomOverlayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/layers/domOverlay.js~DomOverlayer#clearDoms",
    "access": "public",
    "description": null,
    "lineNumber": 61,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 188,
    "kind": "variable",
    "name": "lineHeight",
    "memberof": "src/layers/domOverlay.js",
    "static": true,
    "longname": "src/layers/domOverlay.js~lineHeight",
    "access": "public",
    "export": false,
    "importPath": "mapbox-plugins/src/layers/domOverlay.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 70,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 189,
    "kind": "function",
    "name": "_redraw",
    "memberof": "src/layers/domOverlay.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/layers/domOverlay.js~_redraw",
    "access": "private",
    "export": false,
    "importPath": "mapbox-plugins/src/layers/domOverlay.js",
    "importStyle": null,
    "description": "domOverlay register&render above default canvas..\nkeep in absolute geolocation..",
    "lineNumber": 75,
    "params": [],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 190,
    "kind": "function",
    "name": "preStyleEles",
    "memberof": "src/layers/domOverlay.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/layers/domOverlay.js~preStyleEles",
    "access": "public",
    "export": false,
    "importPath": "mapbox-plugins/src/layers/domOverlay.js",
    "importStyle": null,
    "description": " ___________\n|chart/img  |   main popup. /// It is key topic to place popup align.\n -----------\n      |         line/triangle.. (should implement by psuedoClass!)\n      。         point..\nchartWidth always 2*chartHeight if using Chart.js",
    "lineNumber": 144,
    "params": [
      {
        "name": "line",
        "types": [
          "*"
        ]
      },
      {
        "name": "dot",
        "types": [
          "*"
        ]
      },
      {
        "name": "dom",
        "types": [
          "*"
        ]
      },
      {
        "name": "pix",
        "types": [
          "*"
        ]
      },
      {
        "name": "chartType",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 191,
    "kind": "function",
    "name": "styleChartContainer",
    "memberof": "src/layers/domOverlay.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/layers/domOverlay.js~styleChartContainer",
    "access": "public",
    "export": false,
    "importPath": "mapbox-plugins/src/layers/domOverlay.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 164,
    "undocument": true,
    "params": [
      {
        "name": "dom",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 192,
    "kind": "function",
    "name": "animLine",
    "memberof": "src/layers/domOverlay.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/layers/domOverlay.js~animLine",
    "access": "public",
    "export": false,
    "importPath": "mapbox-plugins/src/layers/domOverlay.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 170,
    "undocument": true,
    "params": [
      {
        "name": "line",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 193,
    "kind": "variable",
    "name": "htmlTemplate",
    "memberof": "src/layers/domOverlay.js",
    "static": true,
    "longname": "src/layers/domOverlay.js~htmlTemplate",
    "access": "public",
    "export": false,
    "importPath": "mapbox-plugins/src/layers/domOverlay.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 174,
    "undocument": true,
    "type": {
      "types": [
        "{}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 194,
    "kind": "file",
    "name": "src/layers/hexgridHeatLayer.js",
    "content": "// Forked from https://github.com/kronick/HexgridHeatmap\r\nvar rbush = require('rbush');\r\nvar turf = {\r\n    center: require('@turf/center'),\r\n    hexGrid: require('@turf/hex-grid'),\r\n    destination: require('@turf/destination'),\r\n    distance: require('@turf/distance'),\r\n};\r\n/** \r\n * Creates a hexgrid-based vector heatmap on the specified map.\r\n * @constructor\r\n * @param {Map} map - The map object that this heatmap should add itself to and track.\r\n * @param {string} [layername=hexgrid-heatmap] - The layer name to use for the heatmap.\r\n * @param {string} [addBefore] - Name of a layer to insert this heatmap underneath.\r\n */\r\nfunction HexgridHeatmap(map, layername, addBefore) {\r\n    if(layername === undefined) layername = \"hexgrid-heatmap\";\r\n    this.map = map;\r\n    this.layername = layername;\r\n    this._setupLayers(layername, addBefore);\r\n    this._setupEvents();\r\n    // Set up an R-tree to look for coordinates as they are stored in GeoJSON Feature objects\r\n    this._tree = rbush(9,['[\"geometry\"][\"coordinates\"][0]','[\"geometry\"][\"coordinates\"][1]','[\"geometry\"][\"coordinates\"][0]','[\"geometry\"][\"coordinates\"][1]']);\r\n\r\n    this._intensity = 8;\r\n    this._spread = 0.1;\r\n    this._minCellIntensity = 0; // Drop out cells that have less than this intensity\r\n    this._maxPointIntensity = 20; // Don't let a single point have a greater weight than this\r\n    this._cellDensity = 1;\r\n\r\n    var thisthis = this;\r\n    this._checkUpdateCompleteClosure = function(e) { thisthis._checkUpdateComplete(e); }\r\n    this._calculatingGrid = false;\r\n    this._recalcWhenReady = false;\r\n}\r\n\r\nHexgridHeatmap.prototype = {\r\n    _setupLayers: function(layername, addBefore) {\r\n        this.map.addSource(layername, {\r\n            type: 'geojson',\r\n            data: { type: \"FeatureCollection\", features: [] }\r\n        });\r\n        this.map.addLayer({\r\n            'id': layername,\r\n            'type': 'fill',\r\n            'source': layername,\r\n            'paint': {\r\n            'fill-opacity': 1.0,\r\n            'fill-color': {\r\n                property: 'count',\r\n                stops: [\r\n                // Short rainbow blue\r\n                [0, \"rgba(0,185,243,0)\"],\r\n                [50, \"rgba(0,185,243,0.24)\"],\r\n                [130, \"rgba(255,223,0,0.3)\"],\r\n                [200, \"rgba(255,105,0,0.3)\"],\r\n                ]\r\n            }\r\n            }\r\n        });\r\n\r\n        this.layer = this.map.getLayer(layername);\r\n        this.source = this.map.getSource(layername);\r\n    },\r\n    _setupEvents: function() {\r\n        var thisthis = this;\r\n        this.map.on(\"moveend\", function() {\r\n            thisthis._updateGrid();\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Set the data to visualize with this heatmap layer\r\n     * @param {FeatureCollection} data - A GeoJSON FeatureCollection containing data to visualize with this heatmap\r\n     * @public\r\n     */\r\n    setData: function(data) {\r\n        // Re-build R-tree index\r\n        this._tree.clear();\r\n        this._tree.load(data.features);\r\n    },\r\n\r\n\r\n    /**\r\n      * Set how widely points affect their neighbors\r\n      * @param {number} spread - A good starting point is 0.1. Higher values will result in more blurred heatmaps, lower values will highlight individual points more strongly.\r\n      * @public\r\n      */\r\n    setSpread: function(spread) {\r\n        this._spread = spread;\r\n    },\r\n\r\n\r\n    /**\r\n      * Set the intensity value for all points.\r\n      * @param {number} intensity - Setting this too low will result in no data displayed, setting it too high will result in an oversaturated map. The default is 8 so adjust up or down from there according to the density of your data.\r\n      * @public\r\n      */ \r\n    setIntensity: function(intensity) {\r\n        this._intensity = intensity;\r\n    },\r\n\r\n\r\n    /**\r\n      * Set custom stops for the heatmap color schem\r\n      * @param {array} stops - An array of `stops` in the format of the Mapbox GL Style Spec. Values should range from 0 to about 200, though you can control saturation by setting different values here.\r\n      */\r\n    setColorStops: function(stops) {\r\n        if (this.layer)\r\n            this.layer.setPaintProperty(\"fill-color\", {property: \"count\", stops: stops});\r\n    },\r\n\r\n\r\n    /**\r\n      * Set the hexgrid cell density\r\n      * @param {number} density - Values less than 1 will result in a decreased cell density from the default, values greater than 1 will result in increaded density/higher resolution. Setting this value too high will result in slow performance.\r\n      * @public\r\n      */ \r\n    setCellDensity: function(density) {\r\n        this._cellDensity = density;\r\n    },\r\n\r\n\r\n    /**\r\n      * Manually force an update to the heatmap\r\n      * You can call this method to manually force the heatmap to be redrawn. Use this after calling `setData()`, `setSpread()`, or `setIntensity()`\r\n      */\r\n    update: function() {\r\n        this._updateGrid();\r\n    },\r\n\r\n\r\n    _generateGrid: function() {\r\n      // Rebuild grid\r\n      //var cellSize = Math.min(Math.max(1000/Math.pow(2,this.map.transform.zoom), 0.01), 0.1); // Constant screen size\r\n\r\n      var cellSize = Math.max(500/Math.pow(2,this.map.transform.zoom) / this._cellDensity, 0.01); // Constant screen size\r\n      \r\n      // TODO: These extents don't work when the map is rotated\r\n      var extents = this.map.getBounds().toArray()\r\n      extents = [extents[0][0], extents[0][1], extents[1][0], extents[1][1]];\r\n\r\n      var hexgrid = turf.hexGrid(extents, cellSize, 'kilometers');\r\n\r\n      var sigma = this._spread;\r\n      var a = 1 / (sigma * Math.sqrt(2 * Math.PI));\r\n      var amplitude = this._intensity;\r\n\r\n      var cellsToSave = [];\r\n \r\n      var thisthis = this;\r\n      hexgrid.features.forEach(function(cell) {\r\n        var center = turf.center(cell);\r\n        var strength = 0;\r\n        var SW = turf.destination(center, sigma * 4, -135);\r\n        var NE = turf.destination(center, sigma * 4, 45);\r\n        var pois = thisthis._tree.search({\r\n            minX: SW.geometry.coordinates[0],\r\n            minY: SW.geometry.coordinates[1],\r\n            maxX: NE.geometry.coordinates[0],\r\n            maxY: NE.geometry.coordinates[1]\r\n        });\r\n\r\n        pois.forEach(function(poi) {\r\n            // TODO: Allow weight to be influenced by a property within the POI\r\n            var distance = turf.distance(center, poi);\r\n\r\n            var weighted = Math.min(Math.exp(-(distance * distance / (2 * sigma * sigma))) * a * amplitude, thisthis._maxPointIntensity);\r\n            strength += weighted;\r\n        });\r\n\r\n        cell.properties.count = strength;\r\n\r\n        if(cell.properties.count > thisthis._minCellIntensity) {\r\n            cellsToSave.push(cell);\r\n        }\r\n      });\r\n\r\n      hexgrid.features = cellsToSave;\r\n      return hexgrid;\r\n\r\n    },\r\n    _updateGrid: function() {\r\n        if(!this._calculatingGrid) {\r\n            this._calculatingGrid = true;\r\n            var hexgrid = this._generateGrid();\r\n            if(hexgrid != null) {\r\n                var thisthis = this;\r\n                this.source.on(\"data\", this._checkUpdateCompleteClosure);\r\n                this.source.setData(hexgrid);\r\n            }\r\n            else {\r\n              this._calculatingGrid = false;\r\n            }\r\n       }\r\n       else {\r\n        this._recalcWhenReady = true;\r\n       }\r\n    },\r\n    _checkUpdateComplete: function(e) {\r\n      if(e.dataType == \"source\") {\r\n        this.source.off(\"data\", this._checkUpdateCompleteClosure);  \r\n        this._calculatingGrid = false;\r\n        if(this._recalcWhenReady) this._updateGrid();\r\n      }\r\n    }\r\n};\r\n\r\nmodule.exports = exports = HexgridHeatmap;\r\n",
    "static": true,
    "longname": "D:/projects/mapbox-plugins/src/layers/hexgridHeatLayer.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 195,
    "kind": "variable",
    "name": "rbush",
    "memberof": "src/layers/hexgridHeatLayer.js",
    "static": true,
    "longname": "src/layers/hexgridHeatLayer.js~rbush",
    "access": "public",
    "export": false,
    "importPath": "mapbox-plugins/src/layers/hexgridHeatLayer.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 196,
    "kind": "variable",
    "name": "turf",
    "memberof": "src/layers/hexgridHeatLayer.js",
    "static": true,
    "longname": "src/layers/hexgridHeatLayer.js~turf",
    "access": "public",
    "export": false,
    "importPath": "mapbox-plugins/src/layers/hexgridHeatLayer.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "{\"center\": *, \"hexGrid\": *, \"destination\": *, \"distance\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 197,
    "kind": "function",
    "name": "HexgridHeatmap",
    "memberof": "src/layers/hexgridHeatLayer.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/layers/hexgridHeatLayer.js~HexgridHeatmap",
    "access": "public",
    "export": false,
    "importPath": "mapbox-plugins/src/layers/hexgridHeatLayer.js",
    "importStyle": null,
    "description": "Creates a hexgrid-based vector heatmap on the specified map.",
    "lineNumber": 16,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Map"
        ],
        "spread": false,
        "optional": false,
        "name": "map",
        "description": "The map object that this heatmap should add itself to and track."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "hexgrid-heatmap",
        "defaultRaw": "hexgrid-heatmap",
        "name": "layername",
        "description": "The layer name to use for the heatmap."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "addBefore",
        "description": "Name of a layer to insert this heatmap underneath."
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 198,
    "kind": "file",
    "name": "src/layers/overlay.js",
    "content": "/**\r\n * Base class of Overlayer\r\n */\r\nexport default class Overlayer {\r\n    constructor(opts){\r\n        if(opts && opts.map)\r\n            this.map = opts.map || undefined;\r\n    }\r\n\r\n    /**\r\n     * to be overwrite in subClass\r\n     */\r\n    _init(){\r\n\r\n    }\r\n\r\n    // @setter\r\n    setMap (map) {\r\n        this.map = map;\r\n        return this;\r\n    }\r\n    /**\r\n     * use Global map or this.map instance to project\r\n     */\r\n    lnglat2pix(lng, lat) {\r\n        if (this.map != undefined && this.map.project instanceof Function) {\r\n            let lnglat = this.map.project(new mapboxgl.LngLat(\r\n                lng, lat));\r\n            let x = (lnglat.x).toFixed(0), y = (lnglat.y).toFixed(0);\r\n            return [x, y];\r\n        }\r\n        return [lng, lat];\r\n    }\r\n}\r\n",
    "static": true,
    "longname": "D:/projects/mapbox-plugins/src/layers/overlay.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 199,
    "kind": "class",
    "name": "Overlayer",
    "memberof": "src/layers/overlay.js",
    "static": true,
    "longname": "src/layers/overlay.js~Overlayer",
    "access": "public",
    "export": true,
    "importPath": "mapbox-plugins/src/layers/overlay.js",
    "importStyle": "Overlayer",
    "description": "Base class of Overlayer",
    "lineNumber": 4,
    "interface": false
  },
  {
    "__docId__": 200,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/layers/overlay.js~Overlayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/layers/overlay.js~Overlayer#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 5,
    "undocument": true
  },
  {
    "__docId__": 201,
    "kind": "member",
    "name": "map",
    "memberof": "src/layers/overlay.js~Overlayer",
    "static": false,
    "longname": "src/layers/overlay.js~Overlayer#map",
    "access": "public",
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 202,
    "kind": "method",
    "name": "_init",
    "memberof": "src/layers/overlay.js~Overlayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/layers/overlay.js~Overlayer#_init",
    "access": "private",
    "description": "to be overwrite in subClass",
    "lineNumber": 13,
    "params": [],
    "return": null
  },
  {
    "__docId__": 203,
    "kind": "method",
    "name": "setMap",
    "memberof": "src/layers/overlay.js~Overlayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/layers/overlay.js~Overlayer#setMap",
    "access": "public",
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "params": [
      {
        "name": "map",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 205,
    "kind": "method",
    "name": "lnglat2pix",
    "memberof": "src/layers/overlay.js~Overlayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/layers/overlay.js~Overlayer#lnglat2pix",
    "access": "public",
    "description": "use Global map or this.map instance to project",
    "lineNumber": 25,
    "params": [
      {
        "name": "lng",
        "types": [
          "*"
        ]
      },
      {
        "name": "lat",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "undefined[]"
      ]
    }
  },
  {
    "__docId__": 206,
    "kind": "file",
    "name": "src/layers/windLayer.js",
    "content": "import {CanvasOverlayer} from './canvasOverlay';\r\n\r\n/**\r\n * initWindlayer based on mapboxgl-canvas\r\n */\r\nexport class WindLayer extends CanvasOverlayer {\r\n    constructor(opts) {\r\n        let _opts = opts || {};\r\n        super(_opts);\r\n        this.windImage = _opts.image || new Image();\r\n        this.radius = _opts.radius || 2; \r\n        // this.redraw = _redraw.bind(this);\r\n    }\r\n    \r\n    /**\r\n     * render particles based on image\r\n     * @param {*grid wind image} image \r\n     */\r\n    updateWind(image, geojson, compressRatio) {\r\n        let canvas = this.canvas, pix2render = [],\r\n            ctx = this.canvas.getContext(\"2d\");\r\n        if (this.particles == undefined) {\r\n            console.log(\"generating particles...\");\r\n            this.particles = genParticles(image, geojson, compressRatio, this.radius);\r\n        }\r\n        // ctx.globalAlpha = 0.95;\r\n        if (!geojson) {\r\n            console.log(\"generating particles complete! num: \" + this.particles.length);\r\n            this.redraw(this.particles);\r\n        } else {\r\n            // wind data should be rendered as mapboxgl vector.\r\n            console.log(\"generating particles complete! num: \" + this.particles.features.length + \" in geojson.\");\r\n        }\r\n    }\r\n}\r\n\r\nfunction _redraw() {\r\n    // this.particles\r\n}\r\n\r\n/**\r\n * generate particles based on got Grid wind image.\r\n * (actually image -> particles)\r\n * called after wind image loaded event..\r\n * return particles: Array, particles with wind strength and angle.\r\n */\r\nfunction genParticles(image, geojson, compressRatio, radius) {\r\n    let windImage = image || this.windImage,\r\n        tmpCanvas = document.createElement(\"canvas\"),\r\n        tmpCtx = tmpCanvas.getContext(\"2d\"),\r\n        particles = [], features = [];\r\n    if (geojson) {\r\n        particles = {\r\n            \"type\": \"FeatureCollection\",\r\n            \"name\": \"particles\",\r\n            \"features\": features\r\n        }\r\n    }\r\n\r\n    tmpCanvas.width = windImage.width;\r\n    tmpCanvas.height = windImage.height;\r\n    tmpCtx.drawImage(windImage, 0, 0);\r\n    // imageData.data.length: width*height*4\r\n    let imageData = tmpCtx.getImageData(0, 0, tmpCanvas.width, tmpCanvas.height),\r\n        dataLength = imageData.data.byteLength;\r\n    if (compressRatio == undefined || (compressRatio !== undefined && compressRatio < 1)) {\r\n        console.warn(\"Input compressRatio invalid, use default 1.\");\r\n        compressRatio = 1;\r\n    }\r\n    compressRatio = parseInt(Number(compressRatio));\r\n    for (let i=1;i<tmpCanvas.height-1;i+=compressRatio) {\r\n        // i:0~180, j:0~360\r\n        for (let j=0;j<tmpCanvas.width;j+=compressRatio) {\r\n            let particle = {\r\n                'lon': -180 + j,\r\n                'lat': -90 + i,\r\n            };            \r\n            let uIndex = (i * 360 + j) * 4, vIndex = uIndex + 1;\r\n            let uVal = imageData.data[uIndex], vVal = imageData.data[vIndex],\r\n                windPow = Math.pow(uVal, 2) + Math.pow(vVal, 2),\r\n                angle = Number(Math.atan(vVal/uVal).toFixed(2)),\r\n                color = 'rgba('+ (windPow/255).toFixed(0) + ', 255, 100, 0.7)';\r\n            // return geojson dataSource for mapboxgl.vector layer.\r\n            if (geojson) {\r\n                particle = { \"type\": \"Feature\", \r\n                    \"properties\": {\r\n                        \"angle\": angle,\r\n                        \"color\": color\r\n                    },\r\n                    \"geometry\": {\r\n                        \"type\": \"Point\",\r\n                        \"coordinates\": [-180 + j, -90 + i]\r\n                    }\r\n                }\r\n                features.push(particle);\r\n            } else {\r\n                particle.color = color;\r\n                particle.angle = angle;\r\n                particle.radius = radius;\r\n                particles.push(particle);\r\n            }\r\n        }\r\n    }\r\n    return particles;\r\n}\r\n",
    "static": true,
    "longname": "D:/projects/mapbox-plugins/src/layers/windLayer.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 207,
    "kind": "class",
    "name": "WindLayer",
    "memberof": "src/layers/windLayer.js",
    "static": true,
    "longname": "src/layers/windLayer.js~WindLayer",
    "access": "public",
    "export": true,
    "importPath": "mapbox-plugins/src/layers/windLayer.js",
    "importStyle": "{WindLayer}",
    "description": "initWindlayer based on mapboxgl-canvas",
    "lineNumber": 6,
    "interface": false,
    "extends": [
      "src/layers/canvasOverlay.js~CanvasOverlayer"
    ]
  },
  {
    "__docId__": 208,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/layers/windLayer.js~WindLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/layers/windLayer.js~WindLayer#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 7,
    "undocument": true
  },
  {
    "__docId__": 209,
    "kind": "member",
    "name": "windImage",
    "memberof": "src/layers/windLayer.js~WindLayer",
    "static": false,
    "longname": "src/layers/windLayer.js~WindLayer#windImage",
    "access": "public",
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 210,
    "kind": "member",
    "name": "radius",
    "memberof": "src/layers/windLayer.js~WindLayer",
    "static": false,
    "longname": "src/layers/windLayer.js~WindLayer#radius",
    "access": "public",
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 211,
    "kind": "method",
    "name": "updateWind",
    "memberof": "src/layers/windLayer.js~WindLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/layers/windLayer.js~WindLayer#updateWind",
    "access": "public",
    "description": "render particles based on image",
    "lineNumber": 19,
    "params": [
      {
        "nullable": null,
        "types": [
          "*grid wind image"
        ],
        "spread": false,
        "optional": false,
        "name": "image",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 212,
    "kind": "member",
    "name": "particles",
    "memberof": "src/layers/windLayer.js~WindLayer",
    "static": false,
    "longname": "src/layers/windLayer.js~WindLayer#particles",
    "access": "public",
    "description": null,
    "lineNumber": 24,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 213,
    "kind": "function",
    "name": "_redraw",
    "memberof": "src/layers/windLayer.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/layers/windLayer.js~_redraw",
    "access": "private",
    "export": false,
    "importPath": "mapbox-plugins/src/layers/windLayer.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 37,
    "undocument": true,
    "params": [],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 214,
    "kind": "function",
    "name": "genParticles",
    "memberof": "src/layers/windLayer.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/layers/windLayer.js~genParticles",
    "access": "public",
    "export": false,
    "importPath": "mapbox-plugins/src/layers/windLayer.js",
    "importStyle": null,
    "description": "generate particles based on got Grid wind image.\n(actually image -> particles)\ncalled after wind image loaded event..\nreturn particles: Array, particles with wind strength and angle.",
    "lineNumber": 47,
    "params": [
      {
        "name": "image",
        "types": [
          "*"
        ]
      },
      {
        "name": "geojson",
        "types": [
          "*"
        ]
      },
      {
        "name": "compressRatio",
        "types": [
          "*"
        ]
      },
      {
        "name": "radius",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 215,
    "kind": "file",
    "name": "src/sprites/sprite.js",
    "content": "/**\r\n * Base class of Drone or other Game-Sprite\r\n */\r\nexport class Sprite {\r\n    constructor(opts) {\r\n        // oye !! hack the Class() with no args.\r\n        let _opts = opts || {};\r\n        this.id = genId();\r\n        this.speed = _opts.speed || 1;\r\n        this.direction = _opts.direction || 0;\r\n        this.name = _opts.name || randomName();\r\n        this.lon = _opts.lon || 120;\r\n        this.lat = _opts.lat || 30;\r\n        this.iconUrl = _opts.icon;\r\n        this.icon = null;\r\n        this._init();\r\n    }\r\n\r\n    _init () {\r\n        let img = new Image();\r\n        img.src = this.iconUrl;\r\n        img.onload = () => {\r\n            this.icon = img;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * to be overwrite.\r\n     */\r\n    accelerate() {\r\n        \r\n    }\r\n    \r\n    turnLeft () {\r\n        if (this) {\r\n            this.direction -= 2;\r\n        }\r\n    }\r\n        \r\n    turnRight () {\r\n        this.direction += 2;\r\n    }\r\n\r\n    brake () {\r\n        if (this.speed > 0) {\r\n            this.speed -= 1;\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport function genId () {\r\n    return (Math.random()*1000000).toString(16);\r\n}\r\n\r\nexport function randomName () {\r\n    let randomNum = Math.random() * 10000;\r\n    return \"Player \".concat(randomNum.toFixed(0));\r\n}\r\n",
    "static": true,
    "longname": "D:/projects/mapbox-plugins/src/sprites/sprite.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 216,
    "kind": "class",
    "name": "Sprite",
    "memberof": "src/sprites/sprite.js",
    "static": true,
    "longname": "src/sprites/sprite.js~Sprite",
    "access": "public",
    "export": true,
    "importPath": "mapbox-plugins/src/sprites/sprite.js",
    "importStyle": "{Sprite}",
    "description": "Base class of Drone or other Game-Sprite",
    "lineNumber": 4,
    "interface": false
  },
  {
    "__docId__": 217,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/sprites/sprite.js~Sprite",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/sprites/sprite.js~Sprite#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 5,
    "undocument": true
  },
  {
    "__docId__": 218,
    "kind": "member",
    "name": "id",
    "memberof": "src/sprites/sprite.js~Sprite",
    "static": false,
    "longname": "src/sprites/sprite.js~Sprite#id",
    "access": "public",
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 219,
    "kind": "member",
    "name": "speed",
    "memberof": "src/sprites/sprite.js~Sprite",
    "static": false,
    "longname": "src/sprites/sprite.js~Sprite#speed",
    "access": "public",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 220,
    "kind": "member",
    "name": "direction",
    "memberof": "src/sprites/sprite.js~Sprite",
    "static": false,
    "longname": "src/sprites/sprite.js~Sprite#direction",
    "access": "public",
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 221,
    "kind": "member",
    "name": "name",
    "memberof": "src/sprites/sprite.js~Sprite",
    "static": false,
    "longname": "src/sprites/sprite.js~Sprite#name",
    "access": "public",
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 222,
    "kind": "member",
    "name": "lon",
    "memberof": "src/sprites/sprite.js~Sprite",
    "static": false,
    "longname": "src/sprites/sprite.js~Sprite#lon",
    "access": "public",
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 223,
    "kind": "member",
    "name": "lat",
    "memberof": "src/sprites/sprite.js~Sprite",
    "static": false,
    "longname": "src/sprites/sprite.js~Sprite#lat",
    "access": "public",
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 224,
    "kind": "member",
    "name": "iconUrl",
    "memberof": "src/sprites/sprite.js~Sprite",
    "static": false,
    "longname": "src/sprites/sprite.js~Sprite#iconUrl",
    "access": "public",
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 225,
    "kind": "member",
    "name": "icon",
    "memberof": "src/sprites/sprite.js~Sprite",
    "static": false,
    "longname": "src/sprites/sprite.js~Sprite#icon",
    "access": "public",
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 226,
    "kind": "method",
    "name": "_init",
    "memberof": "src/sprites/sprite.js~Sprite",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/sprites/sprite.js~Sprite#_init",
    "access": "private",
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 228,
    "kind": "method",
    "name": "accelerate",
    "memberof": "src/sprites/sprite.js~Sprite",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/sprites/sprite.js~Sprite#accelerate",
    "access": "public",
    "description": "to be overwrite.",
    "lineNumber": 30,
    "params": [],
    "return": null
  },
  {
    "__docId__": 229,
    "kind": "method",
    "name": "turnLeft",
    "memberof": "src/sprites/sprite.js~Sprite",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/sprites/sprite.js~Sprite#turnLeft",
    "access": "public",
    "description": null,
    "lineNumber": 34,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 231,
    "kind": "method",
    "name": "turnRight",
    "memberof": "src/sprites/sprite.js~Sprite",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/sprites/sprite.js~Sprite#turnRight",
    "access": "public",
    "description": null,
    "lineNumber": 40,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 233,
    "kind": "method",
    "name": "brake",
    "memberof": "src/sprites/sprite.js~Sprite",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/sprites/sprite.js~Sprite#brake",
    "access": "public",
    "description": null,
    "lineNumber": 44,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 235,
    "kind": "function",
    "name": "genId",
    "memberof": "src/sprites/sprite.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/sprites/sprite.js~genId",
    "access": "public",
    "export": true,
    "importPath": "mapbox-plugins/src/sprites/sprite.js",
    "importStyle": "{genId}",
    "description": null,
    "lineNumber": 52,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 236,
    "kind": "function",
    "name": "randomName",
    "memberof": "src/sprites/sprite.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/sprites/sprite.js~randomName",
    "access": "public",
    "export": true,
    "importPath": "mapbox-plugins/src/sprites/sprite.js",
    "importStyle": "{randomName}",
    "description": null,
    "lineNumber": 56,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 237,
    "kind": "file",
    "name": "src/tween/Tween.js",
    "content": "var breakBetween = 2000;\r\n// myTween.js  needs to be a global Function..\r\nexport let myTween = {\r\n    fps: 30,\r\n    objs : null,\r\n    get : function(models) {\r\n        this.objs = models;\r\n        return this;\r\n    },\r\n    to : function(targets, duration, cb) {\r\n        this.lastAniParams = [targets, duration];\r\n        if (targets != undefined && duration != undefined && myTween.objs != null) {\r\n            var inter = 1000/myTween.fps,\r\n                stepNum = (duration/1000)*myTween.fps,\r\n                stepIndex =0,\r\n                objsCopy = [],\r\n                props = [];\r\n            console.log(\"animation params init complete...\");\r\n\r\n            // tranverse targetStatus props then calculate status of each frame\r\n            for(var i=0;i<myTween.objs.length;i++){\r\n                for(var k in targets[i]) {\r\n                    if(typeof(targets[i][k]) == 'number'){\r\n                        // deepCopy original status..\r\n                        if (typeof objsCopy[i] != 'object') objsCopy[i] = {};\r\n                        if (typeof props[i] != 'object') props[i] = {};\r\n                        objsCopy[i][k] = myTween.objs[i][k];\r\n                        props[i][k] = parseFloat(((targets[i][k] - myTween.objs[i][k]) * (1/stepNum)).toFixed(3)); \r\n                    }\r\n                }\r\n            }\r\n\r\n            function animation() {\r\n                var fadeIn = false, fadeOut = false;\r\n                // animation end related handling.\r\n                if (stepIndex >= stepNum) {\r\n                    // reset objs 2 original status.\r\n                    if (myTween.loop) {\r\n                        stepIndex = 0;\r\n                        for (var i = 0; i < myTween.objs.length; i++) {\r\n                            // shallow copy objects..\r\n                            myTween.objs[i] = Object.assign([], myTween.objs[i], objsCopy[i]);\r\n                        }\r\n                        // myTween.objs = Object.assign([], myTween.objs, objsCopy);\r\n                        console.warn(\"animation reset ...\");\r\n                    } else {\r\n                        myTween.paused = true;\r\n                        clearInterval(myTween.timer);\r\n                        myTween.timerOn = false;\r\n                        console.warn(\"animation end !!!\");\r\n                    }\r\n                    return;\r\n                }\r\n                if (stepIndex == 0) {\r\n                    fadeIn = true;\r\n                } else if (stepIndex == stepNum - 1) {\r\n                    fadeOut = true;\r\n                }\r\n                if (myTween.speed != 1) {\r\n\r\n                }\r\n                // animation pause related.  record current params..\r\n                if (myTween.paused) {\r\n                    return;\r\n                }\r\n                for(var i=0;i<myTween.objs.length;i++){\r\n                    for(var key in props[i]) {\r\n                        // currently animation is controlled by stepIndex..\r\n                        myTween.objs[i][key] += props[i][key];\r\n                        // console.log(\"obj \" +  myTween.objs[i]['name'] +' changed,' + key + \": \" + myTween.objs[i][key]);\r\n                    }\r\n                }\r\n                if (cb && cb instanceof Function) {\r\n                    // redirect cb's context to Right Scope..\r\n                    cb(myTween.objs, fadeOut, fadeIn);\r\n                }\r\n                stepIndex += 1;\r\n            }\r\n            // if last timer is still On, register later.. use async alike process controller.\r\n            return new Promise(function(resolve, reject){\r\n                myTween.timer = setInterval(animation, inter);\r\n                myTween.timerOn = true;\r\n                myTween.paused = false;\r\n                // this step is to sleep for animation duration..\r\n                setTimeout(resolve, duration);\r\n            });\r\n        }\r\n    },\r\n    loop : false,\r\n    speed: 1,\r\n    timerOn: false,\r\n    timer : null,\r\n    paused: false,\r\n    // make async Function execute as Sync Function..\r\n    wait: function(targets, duration) {\r\n        var duration = duration || 0;\r\n        return new Promise(function(res, rej){\r\n            setTimeout(function() {\r\n                if (targets instanceof Object)\r\n                    myTween.objs = Object.assign(myTween.objs, targets);\r\n                else if (targets instanceof Function)\r\n                    console.log(\"execute Func await..\");\r\n                    targets.call(this);\r\n                res();\r\n            }, duration);\r\n        });\r\n    },\r\n    toggleAni: function(paused) {\r\n        if (paused != undefined) {\r\n            this.paused = paused;\r\n            var status = paused? \"paused\": \"playing\";\r\n            return;\r\n        }\r\n        this.paused = !this.paused;\r\n    },\r\n    toggleLoop: function(loop) {\r\n        if (loop != undefined) {\r\n            this.loop = loop;\r\n            return;\r\n        }\r\n        this.loop = !this.loop;\r\n    },\r\n    lastAniParams: [undefined, undefined]\r\n}\r\n\r\nexport let sleep = function (time, fn) {\r\n    return new Promise(function (resolve, reject) {\r\n        setTimeout(function () {\r\n            if (fn && fn instanceof Function) {\r\n                resolve(fn());\r\n            } else {\r\n                resolve();\r\n            }\r\n        }, time);\r\n    })\r\n};\r\n",
    "static": true,
    "longname": "D:/projects/mapbox-plugins/src/tween/Tween.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 238,
    "kind": "variable",
    "name": "breakBetween",
    "memberof": "src/tween/Tween.js",
    "static": true,
    "longname": "src/tween/Tween.js~breakBetween",
    "access": "public",
    "export": false,
    "importPath": "mapbox-plugins/src/tween/Tween.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 239,
    "kind": "variable",
    "name": "myTween",
    "memberof": "src/tween/Tween.js",
    "static": true,
    "longname": "src/tween/Tween.js~myTween",
    "access": "public",
    "export": true,
    "importPath": "mapbox-plugins/src/tween/Tween.js",
    "importStyle": "{myTween}",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "{\"fps\": number, \"objs\": *, \"get\": *, \"to\": *, \"loop\": *, \"speed\": number, \"timerOn\": *, \"timer\": *, \"paused\": *, \"wait\": *, \"toggleAni\": *, \"toggleLoop\": *, \"lastAniParams\": *}"
      ]
    }
  },
  {
    "__docId__": 240,
    "kind": "function",
    "name": "sleep",
    "memberof": "src/tween/Tween.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/tween/Tween.js~sleep",
    "access": "public",
    "export": true,
    "importPath": "mapbox-plugins/src/tween/Tween.js",
    "importStyle": "{sleep}",
    "description": null,
    "lineNumber": 126,
    "undocument": true,
    "params": [
      {
        "name": "time",
        "types": [
          "*"
        ]
      },
      {
        "name": "fn",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 241,
    "kind": "file",
    "name": "src/util.js",
    "content": "import Const from './const';\r\n\r\nexport default class util {\r\n\r\n    static getAnimationFrame() {\r\n        \r\n    }\r\n\r\n    /**\r\n     * use promise to implement xmlHttpRequest process\r\n     * promise.then receive 2 params.(resolve func, reject func)\r\n     */\r\n    // static xhr(){\r\n    //     // promise will excute immediately after init.\r\n    //     let promise = new Promise(() => {\r\n\r\n    //     })\r\n    // }\r\n\r\n    /**\r\n     * Promise.prototype.then()\r\n     * receive resolve callback and reject callback.\r\n     * SO important, if series of Async Process is required, \r\n     * Promise is better than callback hell !\r\n     * \r\n     * xhr().then(data => { // resolve actions.. }, \r\n     *          err => { // reject actions.. }\r\n     *      ).then()\r\n     * \r\n     */\r\n\r\n    /**\r\n     * return promise obj.\r\n     */\r\n    static getJSON(url, resolve, reject) {\r\n        let promise = new Promise((resolve, reject) => {\r\n            let xhr = new XMLHttpRequest();\r\n            xhr.open(\"GET\", url);\r\n            xhr.onreadystatechange = handler;\r\n            xhr.responseType = \"json\";\r\n            xhr.setRequestHeader(\"Accept\", \"application/json\");\r\n            xhr.send();\r\n\r\n            function handler() {\r\n                if (this.readyState !== 4) {\r\n                    return;\r\n                }\r\n                if (this.status === 200) {\r\n                    // if server response success\r\n                    resolve(this.response);\r\n                } else {\r\n                    reject(new Error(this.statusText));\r\n                }\r\n            };\r\n        })\r\n\r\n        return promise;\r\n    }\r\n\r\n    static deepClone(obj) {\r\n        let cloned = {};\r\n        if (typeof obj !== 'object') return null;\r\n        for(let k in obj){\r\n            if (obj.hasOwnProperty(k) && typeof obj[k] !== 'object') {\r\n                cloned[k] = obj[k];\r\n            } else if (obj[k].constructor.toString().indexOf(\"Object\") > 0) {\r\n                cloned[k] = this.deepClone(obj[k]);\r\n            } else if (Array.isArray(obj[k])) {\r\n                cloned[k] = obj[k].map((ele) => {\r\n                    // let ret = null;\r\n                    if (typeof ele !== 'object') return ele;\r\n                    else return this.deepClone(ele);\r\n                });\r\n                // cloned[k] = [].concat(obj[k]);\r\n            }\r\n        }\r\n        return cloned;\r\n    }\r\n\r\n    static isChanged(lastData, data) {\r\n        if (JSON.stringify(lastData) == JSON.stringify(data))\r\n            return false;\r\n        else {\r\n            console.warn('chartData changed..')\r\n            return true;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * return iconposition style by iconName\r\n     */\r\n    static setIconDiv(dom, iconName) {        \r\n        let icons = Const.Sprites;\r\n        if (iconName && icons[iconName]) {\r\n            let iconStyle = icons[iconName],\r\n                iconDiv = document.createElement(\"div\");\r\n            iconDiv.style.width = iconStyle.width + \"px\";\r\n            iconDiv.style.height = iconStyle.height + \"px\";\r\n            iconDiv.style.overflow = 'hidden';\r\n            let iconImg = document.createElement(\"img\");\r\n            iconImg.src = Const.SpritesUrl + \".png\";\r\n            iconImg.style.marginLeft = \"-\" + iconStyle.x + \"px\";\r\n            iconImg.style.marginTop = \"-\" + iconStyle.y + \"px\";\r\n            iconDiv.appendChild(iconImg);\r\n            dom.appendChild(iconDiv);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * add img, video element to domContainer.\r\n     * @param {*domEle} dom, dom container..\r\n     * @param {*Array} res, urls of img/video loaded to dom. \r\n     */\r\n    static setResource(dom, res) {\r\n        if (!(res instanceof Array)) return;\r\n        for (let i = 0; i < res.length; i ++) {\r\n            let filetype = this.getFiletype(res[i]);\r\n            if (filetype !== \"\") {\r\n                let ele = document.createElement(filetype);\r\n                ele.style.width = ele.style.height = dom.style.width = dom.style.height = '60px';\r\n                ele.style.borderRadius = \"50%\";\r\n                ele.src = res[i];\r\n                dom.style.borderRadius = \"50%\";\r\n                dom.appendChild(ele);\r\n            } \r\n            if (filetype == 'video') {\r\n                ele.setAttribute('autoplay', true);\r\n            }\r\n        }\r\n    }\r\n\r\n    static getFiletype(uri) {\r\n        let isIMG = uri.match(/\\.(jpg)|(png)|(gif)/g) ? true: false;\r\n        let isMP4 = uri.match(/\\.mp4\\?+/g) ? true: false;\r\n        if (isIMG) return 'img';\r\n        else if (isMP4) return 'video';\r\n        else {\r\n            console.log(`filetype of ${uri} is not supported`);\r\n            return '';\r\n        }\r\n    }\r\n\r\n    static setChart(dom, data, type, height) {\r\n        if (Chart == undefined) {\r\n            console.warn(`Chart module ${Chart.toString()} not defined or data invalid: ${data.toString()}`);\r\n            return;\r\n        }\r\n        let canv = document.createElement('canvas'),\r\n            ctx = canv.getContext('2d');\r\n        let piechart = new Chart(ctx, {\r\n                type: type,\r\n                data: data,\r\n                options: {\r\n                    legend: {\r\n                        display: false\r\n                    }\r\n                }\r\n            });\r\n        canv.height = height; canv.style.height = canv.height + 'px';\r\n        canv.width = height; canv.style.width = canv.width + 'px';\r\n        dom.appendChild(canv);\r\n    }\r\n\r\n    // random point objs with given number\r\n    static rdObjs(num, mapCenter) {\r\n        var objs = [], index = 0;\r\n        if (!mapCenter) return objs;\r\n        for(var i=0;i<num;i++) {\r\n            objs.push({\r\n                name: \"line\" + i.toString(),\r\n                lon: parseInt(((Math.random()*8)+mapCenter[0]-4).toFixed(2)),\r\n                lat: parseInt(((Math.random()*4)+mapCenter[1]-2).toFixed(2)),\r\n                color: 'rgba(10,200,'+ (Math.random()*251).toFixed(0) +',0.7)',\r\n            });\r\n        }\r\n        objs.push({\r\n            name: \"circle1\",\r\n                lon: mapCenter[0],\r\n                lat: mapCenter[1],\r\n                radius: parseInt(Math.random()*10),\r\n                color: 'rgba(251,200,20,0.6)',\r\n        });\r\n        return objs;\r\n    }\r\n\r\n    /**\r\n     * getJSON(\"somedata.json\").then((data) => {\r\n     *      console.log(\"got data: \" + data);\r\n     * })\r\n     * .catch((err) => {\r\n     *      console.error(\"encounter error..\");\r\n     * })\r\n     */\r\n\r\n    /**\r\n     * compared with traditional imageload. what is the advantage ?\r\n     */\r\n    static loadImageAsync(url, resolve, reject) {\r\n        return new Promise((resolve, reject) => {\r\n            let image = new Image();\r\n            image.onload = resolve;\r\n            image.onerror = reject;\r\n            image.src = url;\r\n        })\r\n    }\r\n\r\n    /**\r\n     * This decorator func.\r\n     */\r\n    static readonly(target, name, descriptor) {\r\n        descriptor.writable = false;\r\n        return descriptor;\r\n    }\r\n\r\n    /**\r\n     * target.descriptor..\r\n     * this decorator used for log before calling target function.\r\n     */\r\n    static log(target, name, descriptor) {\r\n        let oldValue = descriptor.value;\r\n\r\n        descriptor.value = function() {\r\n            console.log(`Calling \"${name}\" with`, arguments);\r\n            // descriptor.value refer to the target itself.. func or attri\r\n            return oldValue.apply(null, arguments);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @param fn {Function}\r\n     * @param delay {Number}\r\n     * @return {Function}\r\n     */\r\n    static debounce(fn, delay) {\r\n        let timer;\r\n        // timer is closure in mem.. returned function is the listener..\r\n        return function() {\r\n            var context = this;\r\n            var args = arguments;\r\n            // clear the previous timer to prevent the function call.\r\n            clearTimeout(timer);\r\n            timer = setTimeout(() => {\r\n                fn.apply(context, args)\r\n            }, delay);\r\n        }\r\n    }\r\n    \r\n}\r\n",
    "static": true,
    "longname": "D:/projects/mapbox-plugins/src/util.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 242,
    "kind": "class",
    "name": "util",
    "memberof": "src/util.js",
    "static": true,
    "longname": "src/util.js~util",
    "access": "public",
    "export": true,
    "importPath": "mapbox-plugins/src/util.js",
    "importStyle": "util",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 243,
    "kind": "method",
    "name": "getAnimationFrame",
    "memberof": "src/util.js~util",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util.js~util.getAnimationFrame",
    "access": "public",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 244,
    "kind": "method",
    "name": "getJSON",
    "memberof": "src/util.js~util",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util.js~util.getJSON",
    "access": "public",
    "description": "return promise obj.",
    "lineNumber": 35,
    "params": [
      {
        "name": "url",
        "types": [
          "*"
        ]
      },
      {
        "name": "resolve",
        "types": [
          "*"
        ]
      },
      {
        "name": "reject",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 245,
    "kind": "method",
    "name": "deepClone",
    "memberof": "src/util.js~util",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util.js~util.deepClone",
    "access": "public",
    "description": null,
    "lineNumber": 60,
    "undocument": true,
    "params": [
      {
        "name": "obj",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 246,
    "kind": "method",
    "name": "isChanged",
    "memberof": "src/util.js~util",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util.js~util.isChanged",
    "access": "public",
    "description": null,
    "lineNumber": 80,
    "undocument": true,
    "params": [
      {
        "name": "lastData",
        "types": [
          "*"
        ]
      },
      {
        "name": "data",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 247,
    "kind": "method",
    "name": "setIconDiv",
    "memberof": "src/util.js~util",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util.js~util.setIconDiv",
    "access": "public",
    "description": "return iconposition style by iconName",
    "lineNumber": 92,
    "params": [
      {
        "name": "dom",
        "types": [
          "*"
        ]
      },
      {
        "name": "iconName",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 248,
    "kind": "method",
    "name": "setResource",
    "memberof": "src/util.js~util",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util.js~util.setResource",
    "access": "public",
    "description": "add img, video element to domContainer.",
    "lineNumber": 114,
    "params": [
      {
        "nullable": null,
        "types": [
          "*domEle"
        ],
        "spread": false,
        "optional": false,
        "name": "dom,",
        "description": "dom container.."
      },
      {
        "nullable": null,
        "types": [
          "*Array"
        ],
        "spread": false,
        "optional": false,
        "name": "res,",
        "description": "urls of img/video loaded to dom."
      }
    ],
    "return": null
  },
  {
    "__docId__": 249,
    "kind": "method",
    "name": "getFiletype",
    "memberof": "src/util.js~util",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util.js~util.getFiletype",
    "access": "public",
    "description": null,
    "lineNumber": 132,
    "undocument": true,
    "params": [
      {
        "name": "uri",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 250,
    "kind": "method",
    "name": "setChart",
    "memberof": "src/util.js~util",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util.js~util.setChart",
    "access": "public",
    "description": null,
    "lineNumber": 143,
    "undocument": true,
    "params": [
      {
        "name": "dom",
        "types": [
          "*"
        ]
      },
      {
        "name": "data",
        "types": [
          "*"
        ]
      },
      {
        "name": "type",
        "types": [
          "*"
        ]
      },
      {
        "name": "height",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 251,
    "kind": "method",
    "name": "rdObjs",
    "memberof": "src/util.js~util",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util.js~util.rdObjs",
    "access": "public",
    "description": null,
    "lineNumber": 165,
    "undocument": true,
    "params": [
      {
        "name": "num",
        "types": [
          "*"
        ]
      },
      {
        "name": "mapCenter",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 252,
    "kind": "method",
    "name": "loadImageAsync",
    "memberof": "src/util.js~util",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util.js~util.loadImageAsync",
    "access": "public",
    "description": "compared with traditional imageload. what is the advantage ?",
    "lineNumber": 198,
    "params": [
      {
        "name": "url",
        "types": [
          "*"
        ]
      },
      {
        "name": "resolve",
        "types": [
          "*"
        ]
      },
      {
        "name": "reject",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 253,
    "kind": "method",
    "name": "readonly",
    "memberof": "src/util.js~util",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util.js~util.readonly",
    "access": "public",
    "description": "This decorator func.",
    "lineNumber": 210,
    "params": [
      {
        "name": "target",
        "types": [
          "*"
        ]
      },
      {
        "name": "name",
        "types": [
          "*"
        ]
      },
      {
        "name": "descriptor",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 254,
    "kind": "method",
    "name": "log",
    "memberof": "src/util.js~util",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util.js~util.log",
    "access": "public",
    "description": "target.descriptor..\nthis decorator used for log before calling target function.",
    "lineNumber": 219,
    "params": [
      {
        "name": "target",
        "types": [
          "*"
        ]
      },
      {
        "name": "name",
        "types": [
          "*"
        ]
      },
      {
        "name": "descriptor",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 255,
    "kind": "method",
    "name": "debounce",
    "memberof": "src/util.js~util",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util.js~util.debounce",
    "access": "public",
    "description": "",
    "lineNumber": 234,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "fn",
        "description": "{Function}"
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "delay",
        "description": "{Number}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Function"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "kind": "index",
    "content": "# mapbox-plugins ![travisStatus](https://travis-ci.org/alex2wong/mapbox-plugins.svg?branch=master) [![FOSSA Status](https://app.fossa.io/api/projects/git%2Bgithub.com%2Falex2wong%2Fmapbox-plugins.svg?type=shield)](https://app.fossa.io/projects/git%2Bgithub.com%2Falex2wong%2Fmapbox-plugins?ref=badge_shield)\r\n\r\nCustomized Mapbox plugins, including game control, canvasOverlayer, scene animation\r\n\r\nhttps://alex2wong.github.io/mapbox-plugins/\r\n\r\nNote: pls visit all demo with **HTTPS**..\r\n\r\n![Point animation](https://github.com/alex2wong/mapbox-plugins/blob/master/assets/demo/point.gif)\r\n\r\n![Custom popup/Route animation](https://github.com/alex2wong/mapbox-plugins/blob/master/assets/demo/popup.gif)\r\n\r\n![Chartjs integration](https://github.com/alex2wong/mapbox-plugins/blob/master/assets/demo/chart.gif)\r\n\r\n![Glow animation](https://github.com/alex2wong/mapbox-plugins/blob/master/assets/demo/glow.gif)\r\n\r\n![Rbush demo](https://github.com/alex2wong/mapbox-plugins/blob/master/assets/demo/rbush.gif)\r\n\r\n![Canvas Line Style](https://github.com/alex2wong/mapbox-plugins/blob/master/assets/canvasLine.jpg)\r\ncanvas line style which can be integrate to any map/chart lib.\r\n## Online demo\r\n[placeholder]:p\r\n\r\n| demo title |  |\r\n| :-------- | :--------:|\r\n| [Sprite track DEMO](https://alex2wong.github.io/mapbox-plugins/examples/sprite) | [view code](https://github.com/alex2wong/mapbox-plugins/tree/master/examples/sprite) |\r\n| [Custom dom overlay DEMO](https://alex2wong.github.io/mapbox-plugins/examples/domoverlay) | [view code](https://github.com/alex2wong/mapbox-plugins/tree/master/examples/domoverlay) |\r\n| [R-tree search (5000 rectangles) DEMO](https://alex2wong.github.io/mapbox-plugins/examples/rbush) | [view code](https://github.com/alex2wong/mapbox-plugins/tree/master/examples/rbush) |\r\n| [Global Wind Layer. render 1w point animation with Canvas](https://alex2wong.github.io/mapbox-plugins/examples/windLayer) | [view code](https://github.com/alex2wong/mapbox-plugins/tree/master/examples/windLayer) |\r\n| [Integrate with Chart.js](https://alex2wong.github.io/mapbox-plugins/examples/chartlayer)  | [view code](https://github.com/alex2wong/mapbox-plugins/tree/master/examples/chartlayer) |\r\n| [Glow animation](https://alex2wong.github.io/mapbox-plugins/examples/glowstyle) | [view code](https://github.com/alex2wong/mapbox-plugins/tree/master/examples/glowstyle) |\r\n| [(NEW) Cool Route Animation](https://alex2wong.github.io/mapbox-plugins/examples/line_animation) | [view code](https://github.com/alex2wong/mapbox-plugins/tree/master/examples/line_animation) |\r\n\r\n\r\n## run locally\r\n\r\n> npm install\r\n\r\n> npm start\r\n\r\nvisit from localhost:8080/examples/\r\n\r\n\r\n## how to use\r\nplugins provide canvasOverlay, domOverlay ,Sprite, gameControl extension etc. for example:\r\n\r\n```javascript\r\n// create a CanvasOverlayer on Mapbox map instance..\r\nvar canvasLayer = new Mapbox.CanvasOverlayer({\r\n    map: map,\r\n    shadow: false,\r\n    keepTrack: true,\r\n    blurWidth: 4\r\n});\r\n\r\n// create a Drone inherites Sprite Class\r\nvar drone = new Mapbox.Drone({\r\n    direction: 45,\r\n    icon: \"https://alex2wong.github.io/mapbox-plugins/assets/tri2.png\"\r\n});\r\n\r\n// add keyboard control to Sprite.\r\nMapbox.Controllers.gameControl(drone);\r\nfunction update(){\r\n    drone.updateStatus();\r\n    // render drone on canvasLayer.\r\n    canvasLayer.redraw([drone]);\r\n    requestAnimationFrame(update);\r\n}\r\nupdate();\r\n\r\n```\r\n\r\n\r\n### Any **☆Star, Enhancement and PR** are welcome :)\r\n\r\n",
    "longname": "D:\\projects\\mapbox-plugins\\README.md",
    "name": "./README.md",
    "static": true,
    "access": "public"
  },
  {
    "kind": "packageJSON",
    "content": "{\r\n  \"name\": \"mapbox-plugins\",\r\n  \"version\": \"1.0.0\",\r\n  \"description\": \"Customized Mapbox plugins, including game control, canvasOverlayer, scene animation\",\r\n  \"main\": \"index.js\",\r\n  \"dependencies\": {\r\n    \"@turf/center\": \"^3.10.3\",\r\n    \"@turf/destination\": \"^3.10.3\",\r\n    \"@turf/distance\": \"^3.10.3\",\r\n    \"@turf/hex-grid\": \"^3.10.3\",\r\n    \"core-decorators\": \"^0.15.0\",\r\n    \"core-js\": \"^2.4.1\",\r\n    \"esdoc\": \"^1.1.0\",\r\n    \"esdoc-standard-plugin\": \"^1.0.0\",\r\n    \"lowpoly\": \"^0.1.0\",\r\n    \"mapbox-gl\": \"^0.39.1\",\r\n    \"rbush\": \"^2.0.1\",\r\n    \"reflect-metadata\": \"^0.1.8\",\r\n    \"request\": \"^2.81.0\",\r\n    \"systemjs\": \"^0.19.41\",\r\n    \"ws\": \"^2.0.3\",\r\n    \"zone.js\": \"^0.7.2\"\r\n  },\r\n  \"devDependencies\": {\r\n    \"babel-cli\": \"^6.18.0\",\r\n    \"babel-core\": \"^6.18.2\",\r\n    \"babel-loader\": \"^6.2.8\",\r\n    \"babel-plugin-transform-decorators\": \"^6.13.0\",\r\n    \"babel-preset-latest\": \"^6.16.0\",\r\n    \"eslint\": \"^4.7.2\",\r\n    \"eslint-config-airbnb\": \"^9.0.1\",\r\n    \"eslint-plugin-promise\": \"^3.5.0\",\r\n    \"eslint-plugin-standard\": \"^3.0.1\",\r\n    \"gulp\": \"^3.9.1\",\r\n    \"webpack\": \"^1.13.3\"\r\n  },\r\n  \"scripts\": {\r\n    \"test\": \"echo \\\"Error: no test specified\\\" && exit 1\",\r\n    \"server\": \"http-server\",\r\n    \"babel\": \"babel src -d lib\",\r\n    \"build\": \"webpack\",\r\n    \"start\": \"webpack && npm run server\",\r\n    \"lint\": \"eslint --cache --ignore-path .gitignore src\"\r\n  },\r\n  \"repository\": {\r\n    \"type\": \"git\",\r\n    \"url\": \"git+https://github.com/alex2wong/mapbox-plugins.git\"\r\n  },\r\n  \"keywords\": [\r\n    \"mapbox\",\r\n    \"plugins\",\r\n    \"es6\",\r\n    \"webpack\"\r\n  ],\r\n  \"author\": \"alex2wong\",\r\n  \"license\": \"BSD-2-Clause\",\r\n  \"bugs\": {\r\n    \"url\": \"https://github.com/alex2wong/mapbox-plugins/issues\"\r\n  },\r\n  \"homepage\": \"https://github.com/alex2wong/mapbox-plugins#readme\"\r\n}\r\n",
    "longname": "D:\\projects\\mapbox-plugins\\package.json",
    "name": "package.json",
    "static": true,
    "access": "public"
  }
]